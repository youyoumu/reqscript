/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/ollama/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Status */
    get: operations["get_status_ollama__get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    /** Get Status */
    head: operations["get_status_ollama__head"];
    patch?: never;
    trace?: never;
  };
  "/ollama/verify": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Verify Connection */
    post: operations["verify_connection_ollama_verify_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ollama/config": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Config */
    get: operations["get_config_ollama_config_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ollama/config/update": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Update Config */
    post: operations["update_config_ollama_config_update_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ollama/api/tags/{url_idx}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Ollama Tags */
    get: operations["get_ollama_tags_ollama_api_tags__url_idx__get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ollama/api/tags": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Ollama Tags */
    get: operations["get_ollama_tags_ollama_api_tags_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ollama/api/version/{url_idx}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Ollama Versions */
    get: operations["get_ollama_versions_ollama_api_version__url_idx__get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ollama/api/version": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Ollama Versions */
    get: operations["get_ollama_versions_ollama_api_version_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ollama/api/ps": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get Ollama Loaded Models
     * @description List models that are currently loaded into Ollama memory, and which node they are loaded on.
     */
    get: operations["get_ollama_loaded_models_ollama_api_ps_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ollama/api/pull/{url_idx}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Pull Model */
    post: operations["pull_model_ollama_api_pull__url_idx__post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ollama/api/pull": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Pull Model */
    post: operations["pull_model_ollama_api_pull_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ollama/api/push/{url_idx}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    /** Push Model */
    delete: operations["push_model_ollama_api_push__url_idx__delete"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ollama/api/push": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    /** Push Model */
    delete: operations["push_model_ollama_api_push_delete"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ollama/api/create/{url_idx}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Create Model */
    post: operations["create_model_ollama_api_create__url_idx__post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ollama/api/create": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Create Model */
    post: operations["create_model_ollama_api_create_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ollama/api/copy/{url_idx}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Copy Model */
    post: operations["copy_model_ollama_api_copy__url_idx__post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ollama/api/copy": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Copy Model */
    post: operations["copy_model_ollama_api_copy_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ollama/api/delete/{url_idx}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    /** Delete Model */
    delete: operations["delete_model_ollama_api_delete__url_idx__delete"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ollama/api/delete": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    /** Delete Model */
    delete: operations["delete_model_ollama_api_delete_delete"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ollama/api/show": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Show Model Info */
    post: operations["show_model_info_ollama_api_show_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ollama/api/embed/{url_idx}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Embed */
    post: operations["embed_ollama_api_embed__url_idx__post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ollama/api/embed": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Embed */
    post: operations["embed_ollama_api_embed_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ollama/api/embeddings/{url_idx}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Embeddings */
    post: operations["embeddings_ollama_api_embeddings__url_idx__post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ollama/api/embeddings": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Embeddings */
    post: operations["embeddings_ollama_api_embeddings_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ollama/api/generate/{url_idx}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Generate Completion */
    post: operations["generate_completion_ollama_api_generate__url_idx__post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ollama/api/generate": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Generate Completion */
    post: operations["generate_completion_ollama_api_generate_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ollama/api/chat/{url_idx}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Generate Chat Completion */
    post: operations["generate_chat_completion_ollama_api_chat__url_idx__post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ollama/api/chat": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Generate Chat Completion */
    post: operations["generate_chat_completion_ollama_api_chat_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ollama/v1/completions/{url_idx}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Generate Openai Completion */
    post: operations["generate_openai_completion_ollama_v1_completions__url_idx__post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ollama/v1/completions": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Generate Openai Completion */
    post: operations["generate_openai_completion_ollama_v1_completions_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ollama/v1/chat/completions/{url_idx}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Generate Openai Chat Completion */
    post: operations["generate_openai_chat_completion_ollama_v1_chat_completions__url_idx__post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ollama/v1/chat/completions": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Generate Openai Chat Completion */
    post: operations["generate_openai_chat_completion_ollama_v1_chat_completions_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ollama/v1/models/{url_idx}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Openai Models */
    get: operations["get_openai_models_ollama_v1_models__url_idx__get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ollama/v1/models": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Openai Models */
    get: operations["get_openai_models_ollama_v1_models_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ollama/models/download/{url_idx}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Download Model */
    post: operations["download_model_ollama_models_download__url_idx__post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ollama/models/download": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Download Model */
    post: operations["download_model_ollama_models_download_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ollama/models/upload/{url_idx}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Upload Model */
    post: operations["upload_model_ollama_models_upload__url_idx__post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ollama/models/upload": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Upload Model */
    post: operations["upload_model_ollama_models_upload_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/openai/config": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Config */
    get: operations["get_config_openai_config_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/openai/config/update": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Update Config */
    post: operations["update_config_openai_config_update_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/openai/audio/speech": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Speech */
    post: operations["speech_openai_audio_speech_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/openai/models/{url_idx}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Models */
    get: operations["get_models_openai_models__url_idx__get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/openai/models": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Models */
    get: operations["get_models_openai_models_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/openai/verify": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Verify Connection */
    post: operations["verify_connection_openai_verify_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/openai/chat/completions": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Generate Chat Completion */
    post: operations["generate_chat_completion_openai_chat_completions_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/openai/{path}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Proxy
     * @description Deprecated: proxy all requests to OpenAI API
     */
    get: operations["proxy_openai__path__post"];
    /**
     * Proxy
     * @description Deprecated: proxy all requests to OpenAI API
     */
    put: operations["proxy_openai__path__post"];
    /**
     * Proxy
     * @description Deprecated: proxy all requests to OpenAI API
     */
    post: operations["proxy_openai__path__post"];
    /**
     * Proxy
     * @description Deprecated: proxy all requests to OpenAI API
     */
    delete: operations["proxy_openai__path__post"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/pipelines/list": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Pipelines List */
    get: operations["get_pipelines_list_api_v1_pipelines_list_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/pipelines/upload": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Upload Pipeline */
    post: operations["upload_pipeline_api_v1_pipelines_upload_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/pipelines/add": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Add Pipeline */
    post: operations["add_pipeline_api_v1_pipelines_add_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/pipelines/delete": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    /** Delete Pipeline */
    delete: operations["delete_pipeline_api_v1_pipelines_delete_delete"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/pipelines/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Pipelines */
    get: operations["get_pipelines_api_v1_pipelines__get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/pipelines/{pipeline_id}/valves": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Pipeline Valves */
    get: operations["get_pipeline_valves_api_v1_pipelines__pipeline_id__valves_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/pipelines/{pipeline_id}/valves/spec": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Pipeline Valves Spec */
    get: operations["get_pipeline_valves_spec_api_v1_pipelines__pipeline_id__valves_spec_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/pipelines/{pipeline_id}/valves/update": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Update Pipeline Valves */
    post: operations["update_pipeline_valves_api_v1_pipelines__pipeline_id__valves_update_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/tasks/config": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Task Config */
    get: operations["get_task_config_api_v1_tasks_config_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/tasks/config/update": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Update Task Config */
    post: operations["update_task_config_api_v1_tasks_config_update_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/tasks/title/completions": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Generate Title */
    post: operations["generate_title_api_v1_tasks_title_completions_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/tasks/tags/completions": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Generate Chat Tags */
    post: operations["generate_chat_tags_api_v1_tasks_tags_completions_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/tasks/image_prompt/completions": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Generate Image Prompt */
    post: operations["generate_image_prompt_api_v1_tasks_image_prompt_completions_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/tasks/queries/completions": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Generate Queries */
    post: operations["generate_queries_api_v1_tasks_queries_completions_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/tasks/auto/completions": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Generate Autocompletion */
    post: operations["generate_autocompletion_api_v1_tasks_auto_completions_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/tasks/emoji/completions": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Generate Emoji */
    post: operations["generate_emoji_api_v1_tasks_emoji_completions_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/tasks/moa/completions": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Generate Moa Response */
    post: operations["generate_moa_response_api_v1_tasks_moa_completions_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/images/config": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Config */
    get: operations["get_config_api_v1_images_config_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/images/config/update": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Update Config */
    post: operations["update_config_api_v1_images_config_update_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/images/config/url/verify": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Verify Url */
    get: operations["verify_url_api_v1_images_config_url_verify_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/images/image/config": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Image Config */
    get: operations["get_image_config_api_v1_images_image_config_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/images/image/config/update": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Update Image Config */
    post: operations["update_image_config_api_v1_images_image_config_update_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/images/models": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Models */
    get: operations["get_models_api_v1_images_models_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/images/generations": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Image Generations */
    post: operations["image_generations_api_v1_images_generations_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/audio/config": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Audio Config */
    get: operations["get_audio_config_api_v1_audio_config_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/audio/config/update": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Update Audio Config */
    post: operations["update_audio_config_api_v1_audio_config_update_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/audio/speech": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Speech */
    post: operations["speech_api_v1_audio_speech_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/audio/transcriptions": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Transcription */
    post: operations["transcription_api_v1_audio_transcriptions_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/audio/models": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Models */
    get: operations["get_models_api_v1_audio_models_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/audio/voices": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Voices */
    get: operations["get_voices_api_v1_audio_voices_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/retrieval/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Status */
    get: operations["get_status_api_v1_retrieval__get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/retrieval/embedding": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Embedding Config */
    get: operations["get_embedding_config_api_v1_retrieval_embedding_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/retrieval/embedding/update": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Update Embedding Config */
    post: operations["update_embedding_config_api_v1_retrieval_embedding_update_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/retrieval/config": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Rag Config */
    get: operations["get_rag_config_api_v1_retrieval_config_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/retrieval/config/update": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Update Rag Config */
    post: operations["update_rag_config_api_v1_retrieval_config_update_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/retrieval/process/file": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Process File */
    post: operations["process_file_api_v1_retrieval_process_file_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/retrieval/process/text": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Process Text */
    post: operations["process_text_api_v1_retrieval_process_text_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/retrieval/process/youtube": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Process Youtube Video */
    post: operations["process_youtube_video_api_v1_retrieval_process_youtube_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/retrieval/process/web": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Process Web */
    post: operations["process_web_api_v1_retrieval_process_web_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/retrieval/process/web/search": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Process Web Search */
    post: operations["process_web_search_api_v1_retrieval_process_web_search_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/retrieval/query/doc": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Query Doc Handler */
    post: operations["query_doc_handler_api_v1_retrieval_query_doc_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/retrieval/query/collection": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Query Collection Handler */
    post: operations["query_collection_handler_api_v1_retrieval_query_collection_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/retrieval/delete": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Delete Entries From Collection */
    post: operations["delete_entries_from_collection_api_v1_retrieval_delete_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/retrieval/reset/db": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Reset Vector Db */
    post: operations["reset_vector_db_api_v1_retrieval_reset_db_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/retrieval/reset/uploads": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Reset Upload Dir */
    post: operations["reset_upload_dir_api_v1_retrieval_reset_uploads_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/retrieval/ef/{text}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Embeddings */
    get: operations["get_embeddings_api_v1_retrieval_ef__text__get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/retrieval/process/files/batch": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /**
     * Process Files Batch
     * @description Process a batch of files and save them to the vector database.
     */
    post: operations["process_files_batch_api_v1_retrieval_process_files_batch_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/configs/import": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Import Config */
    post: operations["import_config_api_v1_configs_import_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/configs/export": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Export Config */
    get: operations["export_config_api_v1_configs_export_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/configs/direct_connections": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Direct Connections Config */
    get: operations["get_direct_connections_config_api_v1_configs_direct_connections_get"];
    put?: never;
    /** Set Direct Connections Config */
    post: operations["set_direct_connections_config_api_v1_configs_direct_connections_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/configs/tool_servers": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Tool Servers Config */
    get: operations["get_tool_servers_config_api_v1_configs_tool_servers_get"];
    put?: never;
    /** Set Tool Servers Config */
    post: operations["set_tool_servers_config_api_v1_configs_tool_servers_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/configs/tool_servers/verify": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /**
     * Verify Tool Servers Config
     * @description Verify the connection to the tool server.
     */
    post: operations["verify_tool_servers_config_api_v1_configs_tool_servers_verify_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/configs/code_execution": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Code Execution Config */
    get: operations["get_code_execution_config_api_v1_configs_code_execution_get"];
    put?: never;
    /** Set Code Execution Config */
    post: operations["set_code_execution_config_api_v1_configs_code_execution_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/configs/models": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Models Config */
    get: operations["get_models_config_api_v1_configs_models_get"];
    put?: never;
    /** Set Models Config */
    post: operations["set_models_config_api_v1_configs_models_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/configs/suggestions": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Set Default Suggestions */
    post: operations["set_default_suggestions_api_v1_configs_suggestions_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/configs/banners": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Banners */
    get: operations["get_banners_api_v1_configs_banners_get"];
    put?: never;
    /** Set Banners */
    post: operations["set_banners_api_v1_configs_banners_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/auths/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Session User */
    get: operations["get_session_user_api_v1_auths__get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/auths/update/profile": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Update Profile */
    post: operations["update_profile_api_v1_auths_update_profile_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/auths/update/password": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Update Password */
    post: operations["update_password_api_v1_auths_update_password_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/auths/ldap": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Ldap Auth */
    post: operations["ldap_auth_api_v1_auths_ldap_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/auths/signin": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Signin */
    post: operations["signin_api_v1_auths_signin_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/auths/signup": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Signup */
    post: operations["signup_api_v1_auths_signup_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/auths/signout": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Signout */
    get: operations["signout_api_v1_auths_signout_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/auths/add": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Add User */
    post: operations["add_user_api_v1_auths_add_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/auths/admin/details": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Admin Details */
    get: operations["get_admin_details_api_v1_auths_admin_details_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/auths/admin/config": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Admin Config */
    get: operations["get_admin_config_api_v1_auths_admin_config_get"];
    put?: never;
    /** Update Admin Config */
    post: operations["update_admin_config_api_v1_auths_admin_config_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/auths/admin/config/ldap/server": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Ldap Server */
    get: operations["get_ldap_server_api_v1_auths_admin_config_ldap_server_get"];
    put?: never;
    /** Update Ldap Server */
    post: operations["update_ldap_server_api_v1_auths_admin_config_ldap_server_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/auths/admin/config/ldap": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Ldap Config */
    get: operations["get_ldap_config_api_v1_auths_admin_config_ldap_get"];
    put?: never;
    /** Update Ldap Config */
    post: operations["update_ldap_config_api_v1_auths_admin_config_ldap_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/auths/api_key": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Api Key */
    get: operations["get_api_key_api_v1_auths_api_key_get"];
    put?: never;
    /** Generate Api Key */
    post: operations["generate_api_key_api_v1_auths_api_key_post"];
    /** Delete Api Key */
    delete: operations["delete_api_key_api_v1_auths_api_key_delete"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/users/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Users */
    get: operations["get_users_api_v1_users__get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/users/all": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get All Users */
    get: operations["get_all_users_api_v1_users_all_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/users/groups": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get User Groups */
    get: operations["get_user_groups_api_v1_users_groups_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/users/permissions": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get User Permissisions */
    get: operations["get_user_permissisions_api_v1_users_permissions_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/users/default/permissions": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Default User Permissions */
    get: operations["get_default_user_permissions_api_v1_users_default_permissions_get"];
    put?: never;
    /** Update Default User Permissions */
    post: operations["update_default_user_permissions_api_v1_users_default_permissions_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/users/update/role": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Update User Role */
    post: operations["update_user_role_api_v1_users_update_role_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/users/user/settings": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get User Settings By Session User */
    get: operations["get_user_settings_by_session_user_api_v1_users_user_settings_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/users/user/settings/update": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Update User Settings By Session User */
    post: operations["update_user_settings_by_session_user_api_v1_users_user_settings_update_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/users/user/info": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get User Info By Session User */
    get: operations["get_user_info_by_session_user_api_v1_users_user_info_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/users/user/info/update": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Update User Info By Session User */
    post: operations["update_user_info_by_session_user_api_v1_users_user_info_update_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/users/{user_id}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get User By Id */
    get: operations["get_user_by_id_api_v1_users__user_id__get"];
    put?: never;
    post?: never;
    /** Delete User By Id */
    delete: operations["delete_user_by_id_api_v1_users__user_id__delete"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/users/{user_id}/update": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Update User By Id */
    post: operations["update_user_by_id_api_v1_users__user_id__update_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/channels/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Channels */
    get: operations["get_channels_api_v1_channels__get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/channels/create": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Create New Channel */
    post: operations["create_new_channel_api_v1_channels_create_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/channels/{id}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Channel By Id */
    get: operations["get_channel_by_id_api_v1_channels__id__get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/channels/{id}/update": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Update Channel By Id */
    post: operations["update_channel_by_id_api_v1_channels__id__update_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/channels/{id}/delete": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    /** Delete Channel By Id */
    delete: operations["delete_channel_by_id_api_v1_channels__id__delete_delete"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/channels/{id}/messages": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Channel Messages */
    get: operations["get_channel_messages_api_v1_channels__id__messages_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/channels/{id}/messages/post": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Post New Message */
    post: operations["post_new_message_api_v1_channels__id__messages_post_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/channels/{id}/messages/{message_id}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Channel Message */
    get: operations["get_channel_message_api_v1_channels__id__messages__message_id__get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/channels/{id}/messages/{message_id}/thread": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Channel Thread Messages */
    get: operations["get_channel_thread_messages_api_v1_channels__id__messages__message_id__thread_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/channels/{id}/messages/{message_id}/update": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Update Message By Id */
    post: operations["update_message_by_id_api_v1_channels__id__messages__message_id__update_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/channels/{id}/messages/{message_id}/reactions/add": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Add Reaction To Message */
    post: operations["add_reaction_to_message_api_v1_channels__id__messages__message_id__reactions_add_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/channels/{id}/messages/{message_id}/reactions/remove": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Remove Reaction By Id And User Id And Name */
    post: operations["remove_reaction_by_id_and_user_id_and_name_api_v1_channels__id__messages__message_id__reactions_remove_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/channels/{id}/messages/{message_id}/delete": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    /** Delete Message By Id */
    delete: operations["delete_message_by_id_api_v1_channels__id__messages__message_id__delete_delete"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/chats/list": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Session User Chat List */
    get: operations["get_session_user_chat_list_api_v1_chats_list_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/chats/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Session User Chat List */
    get: operations["get_session_user_chat_list_api_v1_chats__get"];
    put?: never;
    post?: never;
    /** Delete All User Chats */
    delete: operations["delete_all_user_chats_api_v1_chats__delete"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/chats/list/user/{user_id}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get User Chat List By User Id */
    get: operations["get_user_chat_list_by_user_id_api_v1_chats_list_user__user_id__get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/chats/new": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Create New Chat */
    post: operations["create_new_chat_api_v1_chats_new_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/chats/import": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Import Chat */
    post: operations["import_chat_api_v1_chats_import_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/chats/search": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Search User Chats */
    get: operations["search_user_chats_api_v1_chats_search_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/chats/folder/{folder_id}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Chats By Folder Id */
    get: operations["get_chats_by_folder_id_api_v1_chats_folder__folder_id__get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/chats/pinned": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get User Pinned Chats */
    get: operations["get_user_pinned_chats_api_v1_chats_pinned_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/chats/all": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get User Chats */
    get: operations["get_user_chats_api_v1_chats_all_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/chats/all/archived": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get User Archived Chats */
    get: operations["get_user_archived_chats_api_v1_chats_all_archived_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/chats/all/tags": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get All User Tags */
    get: operations["get_all_user_tags_api_v1_chats_all_tags_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/chats/all/db": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get All User Chats In Db */
    get: operations["get_all_user_chats_in_db_api_v1_chats_all_db_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/chats/archived": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Archived Session User Chat List */
    get: operations["get_archived_session_user_chat_list_api_v1_chats_archived_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/chats/archive/all": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Archive All Chats */
    post: operations["archive_all_chats_api_v1_chats_archive_all_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/chats/share/{share_id}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Shared Chat By Id */
    get: operations["get_shared_chat_by_id_api_v1_chats_share__share_id__get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/chats/tags": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Get User Chat List By Tag Name */
    post: operations["get_user_chat_list_by_tag_name_api_v1_chats_tags_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/chats/{id}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Chat By Id */
    get: operations["get_chat_by_id_api_v1_chats__id__get"];
    put?: never;
    /** Update Chat By Id */
    post: operations["update_chat_by_id_api_v1_chats__id__post"];
    /** Delete Chat By Id */
    delete: operations["delete_chat_by_id_api_v1_chats__id__delete"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/chats/{id}/messages/{message_id}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Update Chat Message By Id */
    post: operations["update_chat_message_by_id_api_v1_chats__id__messages__message_id__post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/chats/{id}/messages/{message_id}/event": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Send Chat Message Event By Id */
    post: operations["send_chat_message_event_by_id_api_v1_chats__id__messages__message_id__event_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/chats/{id}/pinned": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Pinned Status By Id */
    get: operations["get_pinned_status_by_id_api_v1_chats__id__pinned_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/chats/{id}/pin": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Pin Chat By Id */
    post: operations["pin_chat_by_id_api_v1_chats__id__pin_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/chats/{id}/clone": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Clone Chat By Id */
    post: operations["clone_chat_by_id_api_v1_chats__id__clone_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/chats/{id}/clone/shared": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Clone Shared Chat By Id */
    post: operations["clone_shared_chat_by_id_api_v1_chats__id__clone_shared_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/chats/{id}/archive": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Archive Chat By Id */
    post: operations["archive_chat_by_id_api_v1_chats__id__archive_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/chats/{id}/share": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Share Chat By Id */
    post: operations["share_chat_by_id_api_v1_chats__id__share_post"];
    /** Delete Shared Chat By Id */
    delete: operations["delete_shared_chat_by_id_api_v1_chats__id__share_delete"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/chats/{id}/folder": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Update Chat Folder Id By Id */
    post: operations["update_chat_folder_id_by_id_api_v1_chats__id__folder_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/chats/{id}/tags": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Chat Tags By Id */
    get: operations["get_chat_tags_by_id_api_v1_chats__id__tags_get"];
    put?: never;
    /** Add Tag By Id And Tag Name */
    post: operations["add_tag_by_id_and_tag_name_api_v1_chats__id__tags_post"];
    /** Delete Tag By Id And Tag Name */
    delete: operations["delete_tag_by_id_and_tag_name_api_v1_chats__id__tags_delete"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/chats/{id}/tags/all": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    /** Delete All Tags By Id */
    delete: operations["delete_all_tags_by_id_api_v1_chats__id__tags_all_delete"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/notes/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Notes */
    get: operations["get_notes_api_v1_notes__get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/notes/list": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Note List */
    get: operations["get_note_list_api_v1_notes_list_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/notes/create": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Create New Note */
    post: operations["create_new_note_api_v1_notes_create_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/notes/{id}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Note By Id */
    get: operations["get_note_by_id_api_v1_notes__id__get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/notes/{id}/update": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Update Note By Id */
    post: operations["update_note_by_id_api_v1_notes__id__update_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/notes/{id}/delete": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    /** Delete Note By Id */
    delete: operations["delete_note_by_id_api_v1_notes__id__delete_delete"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/models/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Models */
    get: operations["get_models_api_v1_models__get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/models/base": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Base Models */
    get: operations["get_base_models_api_v1_models_base_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/models/create": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Create New Model */
    post: operations["create_new_model_api_v1_models_create_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/models/model": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Model By Id */
    get: operations["get_model_by_id_api_v1_models_model_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/models/model/toggle": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Toggle Model By Id */
    post: operations["toggle_model_by_id_api_v1_models_model_toggle_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/models/model/update": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Update Model By Id */
    post: operations["update_model_by_id_api_v1_models_model_update_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/models/model/delete": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    /** Delete Model By Id */
    delete: operations["delete_model_by_id_api_v1_models_model_delete_delete"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/models/delete/all": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    /** Delete All Models */
    delete: operations["delete_all_models_api_v1_models_delete_all_delete"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/knowledge/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Knowledge */
    get: operations["get_knowledge_api_v1_knowledge__get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/knowledge/list": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Knowledge List */
    get: operations["get_knowledge_list_api_v1_knowledge_list_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/knowledge/create": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Create New Knowledge */
    post: operations["create_new_knowledge_api_v1_knowledge_create_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/knowledge/reindex": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Reindex Knowledge Files */
    post: operations["reindex_knowledge_files_api_v1_knowledge_reindex_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/knowledge/{id}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Knowledge By Id */
    get: operations["get_knowledge_by_id_api_v1_knowledge__id__get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/knowledge/{id}/update": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Update Knowledge By Id */
    post: operations["update_knowledge_by_id_api_v1_knowledge__id__update_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/knowledge/{id}/file/add": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Add File To Knowledge By Id */
    post: operations["add_file_to_knowledge_by_id_api_v1_knowledge__id__file_add_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/knowledge/{id}/file/update": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Update File From Knowledge By Id */
    post: operations["update_file_from_knowledge_by_id_api_v1_knowledge__id__file_update_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/knowledge/{id}/file/remove": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Remove File From Knowledge By Id */
    post: operations["remove_file_from_knowledge_by_id_api_v1_knowledge__id__file_remove_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/knowledge/{id}/delete": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    /** Delete Knowledge By Id */
    delete: operations["delete_knowledge_by_id_api_v1_knowledge__id__delete_delete"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/knowledge/{id}/reset": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Reset Knowledge By Id */
    post: operations["reset_knowledge_by_id_api_v1_knowledge__id__reset_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/knowledge/{id}/files/batch/add": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /**
     * Add Files To Knowledge Batch
     * @description Add multiple files to a knowledge base
     */
    post: operations["add_files_to_knowledge_batch_api_v1_knowledge__id__files_batch_add_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/prompts/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Prompts */
    get: operations["get_prompts_api_v1_prompts__get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/prompts/list": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Prompt List */
    get: operations["get_prompt_list_api_v1_prompts_list_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/prompts/create": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Create New Prompt */
    post: operations["create_new_prompt_api_v1_prompts_create_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/prompts/command/{command}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Prompt By Command */
    get: operations["get_prompt_by_command_api_v1_prompts_command__command__get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/prompts/command/{command}/update": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Update Prompt By Command */
    post: operations["update_prompt_by_command_api_v1_prompts_command__command__update_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/prompts/command/{command}/delete": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    /** Delete Prompt By Command */
    delete: operations["delete_prompt_by_command_api_v1_prompts_command__command__delete_delete"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/tools/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Tools */
    get: operations["get_tools_api_v1_tools__get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/tools/list": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Tool List */
    get: operations["get_tool_list_api_v1_tools_list_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/tools/export": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Export Tools */
    get: operations["export_tools_api_v1_tools_export_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/tools/create": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Create New Tools */
    post: operations["create_new_tools_api_v1_tools_create_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/tools/id/{id}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Tools By Id */
    get: operations["get_tools_by_id_api_v1_tools_id__id__get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/tools/id/{id}/update": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Update Tools By Id */
    post: operations["update_tools_by_id_api_v1_tools_id__id__update_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/tools/id/{id}/delete": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    /** Delete Tools By Id */
    delete: operations["delete_tools_by_id_api_v1_tools_id__id__delete_delete"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/tools/id/{id}/valves": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Tools Valves By Id */
    get: operations["get_tools_valves_by_id_api_v1_tools_id__id__valves_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/tools/id/{id}/valves/spec": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Tools Valves Spec By Id */
    get: operations["get_tools_valves_spec_by_id_api_v1_tools_id__id__valves_spec_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/tools/id/{id}/valves/update": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Update Tools Valves By Id */
    post: operations["update_tools_valves_by_id_api_v1_tools_id__id__valves_update_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/tools/id/{id}/valves/user": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Tools User Valves By Id */
    get: operations["get_tools_user_valves_by_id_api_v1_tools_id__id__valves_user_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/tools/id/{id}/valves/user/spec": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Tools User Valves Spec By Id */
    get: operations["get_tools_user_valves_spec_by_id_api_v1_tools_id__id__valves_user_spec_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/tools/id/{id}/valves/user/update": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Update Tools User Valves By Id */
    post: operations["update_tools_user_valves_by_id_api_v1_tools_id__id__valves_user_update_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/memories/ef": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Embeddings */
    get: operations["get_embeddings_api_v1_memories_ef_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/memories/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Memories */
    get: operations["get_memories_api_v1_memories__get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/memories/add": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Add Memory */
    post: operations["add_memory_api_v1_memories_add_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/memories/query": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Query Memory */
    post: operations["query_memory_api_v1_memories_query_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/memories/reset": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Reset Memory From Vector Db */
    post: operations["reset_memory_from_vector_db_api_v1_memories_reset_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/memories/delete/user": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    /** Delete Memory By User Id */
    delete: operations["delete_memory_by_user_id_api_v1_memories_delete_user_delete"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/memories/{memory_id}/update": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Update Memory By Id */
    post: operations["update_memory_by_id_api_v1_memories__memory_id__update_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/memories/{memory_id}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    /** Delete Memory By Id */
    delete: operations["delete_memory_by_id_api_v1_memories__memory_id__delete"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/folders/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Folders */
    get: operations["get_folders_api_v1_folders__get"];
    put?: never;
    /** Create Folder */
    post: operations["create_folder_api_v1_folders__post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/folders/{id}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Folder By Id */
    get: operations["get_folder_by_id_api_v1_folders__id__get"];
    put?: never;
    post?: never;
    /** Delete Folder By Id */
    delete: operations["delete_folder_by_id_api_v1_folders__id__delete"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/folders/{id}/update": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Update Folder Name By Id */
    post: operations["update_folder_name_by_id_api_v1_folders__id__update_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/folders/{id}/update/parent": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Update Folder Parent Id By Id */
    post: operations["update_folder_parent_id_by_id_api_v1_folders__id__update_parent_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/folders/{id}/update/expanded": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Update Folder Is Expanded By Id */
    post: operations["update_folder_is_expanded_by_id_api_v1_folders__id__update_expanded_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/groups/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Groups */
    get: operations["get_groups_api_v1_groups__get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/groups/create": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Create New Group */
    post: operations["create_new_group_api_v1_groups_create_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/groups/id/{id}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Group By Id */
    get: operations["get_group_by_id_api_v1_groups_id__id__get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/groups/id/{id}/update": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Update Group By Id */
    post: operations["update_group_by_id_api_v1_groups_id__id__update_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/groups/id/{id}/delete": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    /** Delete Group By Id */
    delete: operations["delete_group_by_id_api_v1_groups_id__id__delete_delete"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/files/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** List Files */
    get: operations["list_files_api_v1_files__get"];
    put?: never;
    /** Upload File */
    post: operations["upload_file_api_v1_files__post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/files/search": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Search Files
     * @description Search for files by filename with support for wildcard patterns.
     */
    get: operations["search_files_api_v1_files_search_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/files/all": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    /** Delete All Files */
    delete: operations["delete_all_files_api_v1_files_all_delete"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/files/{id}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get File By Id */
    get: operations["get_file_by_id_api_v1_files__id__get"];
    put?: never;
    post?: never;
    /** Delete File By Id */
    delete: operations["delete_file_by_id_api_v1_files__id__delete"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/files/{id}/data/content": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get File Data Content By Id */
    get: operations["get_file_data_content_by_id_api_v1_files__id__data_content_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/files/{id}/data/content/update": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Update File Data Content By Id */
    post: operations["update_file_data_content_by_id_api_v1_files__id__data_content_update_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/files/{id}/content": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get File Content By Id */
    get: operations["get_file_content_by_id_api_v1_files__id__content_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/files/{id}/content/html": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Html File Content By Id */
    get: operations["get_html_file_content_by_id_api_v1_files__id__content_html_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/files/{id}/content/{file_name}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get File Content By Id */
    get: operations["get_file_content_by_id_api_v1_files__id__content__file_name__get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/functions/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Functions */
    get: operations["get_functions_api_v1_functions__get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/functions/export": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Functions */
    get: operations["get_functions_api_v1_functions_export_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/functions/create": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Create New Function */
    post: operations["create_new_function_api_v1_functions_create_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/functions/id/{id}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Function By Id */
    get: operations["get_function_by_id_api_v1_functions_id__id__get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/functions/id/{id}/toggle": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Toggle Function By Id */
    post: operations["toggle_function_by_id_api_v1_functions_id__id__toggle_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/functions/id/{id}/toggle/global": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Toggle Global By Id */
    post: operations["toggle_global_by_id_api_v1_functions_id__id__toggle_global_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/functions/id/{id}/update": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Update Function By Id */
    post: operations["update_function_by_id_api_v1_functions_id__id__update_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/functions/id/{id}/delete": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    /** Delete Function By Id */
    delete: operations["delete_function_by_id_api_v1_functions_id__id__delete_delete"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/functions/id/{id}/valves": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Function Valves By Id */
    get: operations["get_function_valves_by_id_api_v1_functions_id__id__valves_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/functions/id/{id}/valves/spec": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Function Valves Spec By Id */
    get: operations["get_function_valves_spec_by_id_api_v1_functions_id__id__valves_spec_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/functions/id/{id}/valves/update": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Update Function Valves By Id */
    post: operations["update_function_valves_by_id_api_v1_functions_id__id__valves_update_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/functions/id/{id}/valves/user": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Function User Valves By Id */
    get: operations["get_function_user_valves_by_id_api_v1_functions_id__id__valves_user_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/functions/id/{id}/valves/user/spec": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Function User Valves Spec By Id */
    get: operations["get_function_user_valves_spec_by_id_api_v1_functions_id__id__valves_user_spec_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/functions/id/{id}/valves/user/update": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Update Function User Valves By Id */
    post: operations["update_function_user_valves_by_id_api_v1_functions_id__id__valves_user_update_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/evaluations/config": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Config */
    get: operations["get_config_api_v1_evaluations_config_get"];
    put?: never;
    /** Update Config */
    post: operations["update_config_api_v1_evaluations_config_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/evaluations/feedbacks/all": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get All Feedbacks */
    get: operations["get_all_feedbacks_api_v1_evaluations_feedbacks_all_get"];
    put?: never;
    post?: never;
    /** Delete All Feedbacks */
    delete: operations["delete_all_feedbacks_api_v1_evaluations_feedbacks_all_delete"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/evaluations/feedbacks/all/export": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get All Feedbacks */
    get: operations["get_all_feedbacks_api_v1_evaluations_feedbacks_all_export_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/evaluations/feedbacks/user": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Feedbacks */
    get: operations["get_feedbacks_api_v1_evaluations_feedbacks_user_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/evaluations/feedbacks": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    /** Delete Feedbacks */
    delete: operations["delete_feedbacks_api_v1_evaluations_feedbacks_delete"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/evaluations/feedback": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Create Feedback */
    post: operations["create_feedback_api_v1_evaluations_feedback_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/evaluations/feedback/{id}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Feedback By Id */
    get: operations["get_feedback_by_id_api_v1_evaluations_feedback__id__get"];
    put?: never;
    /** Update Feedback By Id */
    post: operations["update_feedback_by_id_api_v1_evaluations_feedback__id__post"];
    /** Delete Feedback By Id */
    delete: operations["delete_feedback_by_id_api_v1_evaluations_feedback__id__delete"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/utils/gravatar": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Gravatar */
    get: operations["get_gravatar_api_v1_utils_gravatar_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/utils/code/format": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Format Code */
    post: operations["format_code_api_v1_utils_code_format_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/utils/code/execute": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Execute Code */
    post: operations["execute_code_api_v1_utils_code_execute_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/utils/markdown": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Get Html From Markdown */
    post: operations["get_html_from_markdown_api_v1_utils_markdown_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/utils/pdf": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Download Chat As Pdf */
    post: operations["download_chat_as_pdf_api_v1_utils_pdf_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/utils/db/download": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Download Db */
    get: operations["download_db_api_v1_utils_db_download_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v1/utils/litellm/config": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Download Litellm Config Yaml */
    get: operations["download_litellm_config_yaml_api_v1_utils_litellm_config_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/models": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Models */
    get: operations["get_models_api_models_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/models/base": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Base Models */
    get: operations["get_base_models_api_models_base_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/chat/completions": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Chat Completion */
    post: operations["chat_completion_api_chat_completions_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/chat/completed": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Chat Completed */
    post: operations["chat_completed_api_chat_completed_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/chat/actions/{action_id}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Chat Action */
    post: operations["chat_action_api_chat_actions__action_id__post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/tasks/stop/{task_id}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Stop Task Endpoint */
    post: operations["stop_task_endpoint_api_tasks_stop__task_id__post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/tasks": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** List Tasks Endpoint */
    get: operations["list_tasks_endpoint_api_tasks_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/tasks/chat/{chat_id}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** List Tasks By Chat Id Endpoint */
    get: operations["list_tasks_by_chat_id_endpoint_api_tasks_chat__chat_id__get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/config": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get App Config */
    get: operations["get_app_config_api_config_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/webhook": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Webhook Url */
    get: operations["get_webhook_url_api_webhook_get"];
    put?: never;
    /** Update Webhook Url */
    post: operations["update_webhook_url_api_webhook_post"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/version": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get App Version */
    get: operations["get_app_version_api_version_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/version/updates": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get App Latest Release Version */
    get: operations["get_app_latest_release_version_api_version_updates_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/changelog": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get App Changelog */
    get: operations["get_app_changelog_api_changelog_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/oauth/{provider}/login": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Oauth Login */
    get: operations["oauth_login_oauth__provider__login_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/oauth/{provider}/callback": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Oauth Callback */
    get: operations["oauth_callback_oauth__provider__callback_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/manifest.json": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Manifest Json */
    get: operations["get_manifest_json_manifest_json_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/opensearch.xml": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Opensearch Xml */
    get: operations["get_opensearch_xml_opensearch_xml_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/health": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Healthcheck */
    get: operations["healthcheck_health_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/health/db": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Healthcheck With Db */
    get: operations["healthcheck_with_db_health_db_get"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    /** AddMemoryForm */
    AddMemoryForm: {
      /** Content */
      content: string;
    };
    /** AddPipelineForm */
    AddPipelineForm: {
      /** Url */
      url: string;
      /** Urlidx */
      urlIdx: number;
    };
    /** AddUserForm */
    AddUserForm: {
      /** Name */
      name: string;
      /** Email */
      email: string;
      /** Password */
      password: string;
      /**
       * Profile Image Url
       * @default /user.png
       */
      profile_image_url: string | null;
      /**
       * Role
       * @default pending
       */
      role: string | null;
    };
    /** AdminConfig */
    AdminConfig: {
      /** Show Admin Details */
      SHOW_ADMIN_DETAILS: boolean;
      /** Webui Url */
      WEBUI_URL: string;
      /** Enable Signup */
      ENABLE_SIGNUP: boolean;
      /** Enable Api Key */
      ENABLE_API_KEY: boolean;
      /** Enable Api Key Endpoint Restrictions */
      ENABLE_API_KEY_ENDPOINT_RESTRICTIONS: boolean;
      /** Api Key Allowed Endpoints */
      API_KEY_ALLOWED_ENDPOINTS: string;
      /** Default User Role */
      DEFAULT_USER_ROLE: string;
      /** Jwt Expires In */
      JWT_EXPIRES_IN: string;
      /** Enable Community Sharing */
      ENABLE_COMMUNITY_SHARING: boolean;
      /** Enable Message Rating */
      ENABLE_MESSAGE_RATING: boolean;
      /** Enable Channels */
      ENABLE_CHANNELS: boolean;
      /** Enable Notes */
      ENABLE_NOTES: boolean;
      /** Enable User Webhooks */
      ENABLE_USER_WEBHOOKS: boolean;
      /** Pending User Overlay Title */
      PENDING_USER_OVERLAY_TITLE?: string | null;
      /** Pending User Overlay Content */
      PENDING_USER_OVERLAY_CONTENT?: string | null;
      /** Response Watermark */
      RESPONSE_WATERMARK?: string | null;
    };
    /** ApiKey */
    ApiKey: {
      /** Api Key */
      api_key?: string | null;
    };
    /** AudioConfigUpdateForm */
    AudioConfigUpdateForm: {
      tts: components["schemas"]["TTSConfigForm"];
      stt: components["schemas"]["STTConfigForm"];
    };
    /** Automatic1111ConfigForm */
    Automatic1111ConfigForm: {
      /** Automatic1111 Base Url */
      AUTOMATIC1111_BASE_URL: string;
      /** Automatic1111 Api Auth */
      AUTOMATIC1111_API_AUTH: string;
      /** Automatic1111 Cfg Scale */
      AUTOMATIC1111_CFG_SCALE: string | number | null;
      /** Automatic1111 Sampler */
      AUTOMATIC1111_SAMPLER: string | null;
      /** Automatic1111 Scheduler */
      AUTOMATIC1111_SCHEDULER: string | null;
    };
    /** BannerModel */
    BannerModel: {
      /** Id */
      id: string;
      /** Type */
      type: string;
      /** Title */
      title?: string | null;
      /** Content */
      content: string;
      /** Dismissible */
      dismissible: boolean;
      /** Timestamp */
      timestamp: number;
    };
    /** BatchProcessFilesForm */
    BatchProcessFilesForm: {
      /** Files */
      files: components["schemas"]["FileModel"][];
      /** Collection Name */
      collection_name: string;
    };
    /** BatchProcessFilesResponse */
    BatchProcessFilesResponse: {
      /** Results */
      results: components["schemas"]["BatchProcessFilesResult"][];
      /** Errors */
      errors: components["schemas"]["BatchProcessFilesResult"][];
    };
    /** BatchProcessFilesResult */
    BatchProcessFilesResult: {
      /** File Id */
      file_id: string;
      /** Status */
      status: string;
      /** Error */
      error?: string | null;
    };
    /** Body_transcription_api_v1_audio_transcriptions_post */
    Body_transcription_api_v1_audio_transcriptions_post: {
      /**
       * File
       * Format: binary
       */
      file: string;
    };
    /** Body_upload_file_api_v1_files__post */
    Body_upload_file_api_v1_files__post: {
      /**
       * File
       * Format: binary
       */
      file: string;
      /** File Metadata */
      file_metadata?: Record<string, never>;
    };
    /** Body_upload_model_ollama_models_upload__url_idx__post */
    Body_upload_model_ollama_models_upload__url_idx__post: {
      /**
       * File
       * Format: binary
       */
      file: string;
    };
    /** Body_upload_model_ollama_models_upload_post */
    Body_upload_model_ollama_models_upload_post: {
      /**
       * File
       * Format: binary
       */
      file: string;
    };
    /** Body_upload_pipeline_api_v1_pipelines_upload_post */
    Body_upload_pipeline_api_v1_pipelines_upload_post: {
      /** Urlidx */
      urlIdx: number;
      /**
       * File
       * Format: binary
       */
      file: string;
    };
    /** ChannelForm */
    ChannelForm: {
      /** Name */
      name: string;
      /** Description */
      description?: string | null;
      /** Data */
      data?: Record<string, never> | null;
      /** Meta */
      meta?: Record<string, never> | null;
      /** Access Control */
      access_control?: Record<string, never> | null;
    };
    /** ChannelModel */
    ChannelModel: {
      /** Id */
      id: string;
      /** User Id */
      user_id: string;
      /** Type */
      type?: string | null;
      /** Name */
      name: string;
      /** Description */
      description?: string | null;
      /** Data */
      data?: Record<string, never> | null;
      /** Meta */
      meta?: Record<string, never> | null;
      /** Access Control */
      access_control?: Record<string, never> | null;
      /** Created At */
      created_at: number;
      /** Updated At */
      updated_at: number;
    };
    /** ChatFolderIdForm */
    ChatFolderIdForm: {
      /** Folder Id */
      folder_id?: string | null;
    };
    /** ChatForm */
    ChatForm: {
      /** Chat */
      chat: Record<string, never>;
    };
    /** ChatImportForm */
    ChatImportForm: {
      /** Chat */
      chat: Record<string, never>;
      /**
       * Meta
       * @default {}
       */
      meta: Record<string, never> | null;
      /**
       * Pinned
       * @default false
       */
      pinned: boolean | null;
      /** Folder Id */
      folder_id?: string | null;
    };
    /** ChatPermissions */
    ChatPermissions: {
      /**
       * Controls
       * @default true
       */
      controls: boolean;
      /**
       * File Upload
       * @default true
       */
      file_upload: boolean;
      /**
       * Delete
       * @default true
       */
      delete: boolean;
      /**
       * Edit
       * @default true
       */
      edit: boolean;
      /**
       * Share
       * @default true
       */
      share: boolean;
      /**
       * Export
       * @default true
       */
      export: boolean;
      /**
       * Stt
       * @default true
       */
      stt: boolean;
      /**
       * Tts
       * @default true
       */
      tts: boolean;
      /**
       * Call
       * @default true
       */
      call: boolean;
      /**
       * Multiple Models
       * @default true
       */
      multiple_models: boolean;
      /**
       * Temporary
       * @default true
       */
      temporary: boolean;
      /**
       * Temporary Enforced
       * @default false
       */
      temporary_enforced: boolean;
    };
    /** ChatResponse */
    ChatResponse: {
      /** Id */
      id: string;
      /** User Id */
      user_id: string;
      /** Title */
      title: string;
      /** Chat */
      chat: Record<string, never>;
      /** Updated At */
      updated_at: number;
      /** Created At */
      created_at: number;
      /** Share Id */
      share_id?: string | null;
      /** Archived */
      archived: boolean;
      /**
       * Pinned
       * @default false
       */
      pinned: boolean | null;
      /**
       * Meta
       * @default {}
       */
      meta: Record<string, never>;
      /** Folder Id */
      folder_id?: string | null;
    };
    /** ChatTitleIdResponse */
    ChatTitleIdResponse: {
      /** Id */
      id: string;
      /** Title */
      title: string;
      /** Updated At */
      updated_at: number;
      /** Created At */
      created_at: number;
    };
    /** ChatTitleMessagesForm */
    ChatTitleMessagesForm: {
      /** Title */
      title: string;
      /** Messages */
      messages: Record<string, never>[];
    };
    /** CloneForm */
    CloneForm: {
      /** Title */
      title?: string | null;
    };
    /** CodeForm */
    CodeForm: {
      /** Code */
      code: string;
    };
    /** CodeInterpreterConfigForm */
    CodeInterpreterConfigForm: {
      /** Enable Code Execution */
      ENABLE_CODE_EXECUTION: boolean;
      /** Code Execution Engine */
      CODE_EXECUTION_ENGINE: string;
      /** Code Execution Jupyter Url */
      CODE_EXECUTION_JUPYTER_URL: string | null;
      /** Code Execution Jupyter Auth */
      CODE_EXECUTION_JUPYTER_AUTH: string | null;
      /** Code Execution Jupyter Auth Token */
      CODE_EXECUTION_JUPYTER_AUTH_TOKEN: string | null;
      /** Code Execution Jupyter Auth Password */
      CODE_EXECUTION_JUPYTER_AUTH_PASSWORD: string | null;
      /** Code Execution Jupyter Timeout */
      CODE_EXECUTION_JUPYTER_TIMEOUT: number | null;
      /** Enable Code Interpreter */
      ENABLE_CODE_INTERPRETER: boolean;
      /** Code Interpreter Engine */
      CODE_INTERPRETER_ENGINE: string;
      /** Code Interpreter Prompt Template */
      CODE_INTERPRETER_PROMPT_TEMPLATE: string | null;
      /** Code Interpreter Jupyter Url */
      CODE_INTERPRETER_JUPYTER_URL: string | null;
      /** Code Interpreter Jupyter Auth */
      CODE_INTERPRETER_JUPYTER_AUTH: string | null;
      /** Code Interpreter Jupyter Auth Token */
      CODE_INTERPRETER_JUPYTER_AUTH_TOKEN: string | null;
      /** Code Interpreter Jupyter Auth Password */
      CODE_INTERPRETER_JUPYTER_AUTH_PASSWORD: string | null;
      /** Code Interpreter Jupyter Timeout */
      CODE_INTERPRETER_JUPYTER_TIMEOUT: number | null;
    };
    /** ComfyUIConfigForm */
    ComfyUIConfigForm: {
      /** Comfyui Base Url */
      COMFYUI_BASE_URL: string;
      /** Comfyui Api Key */
      COMFYUI_API_KEY: string;
      /** Comfyui Workflow */
      COMFYUI_WORKFLOW: string;
      /** Comfyui Workflow Nodes */
      COMFYUI_WORKFLOW_NODES: Record<string, never>[];
    };
    /** ContentForm */
    ContentForm: {
      /** Content */
      content: string;
    };
    /** CopyModelForm */
    CopyModelForm: {
      /** Source */
      source: string;
      /** Destination */
      destination: string;
    };
    /** CreateModelForm */
    CreateModelForm: {
      /** Model */
      model?: string | null;
      /** Stream */
      stream?: boolean | null;
      /** Path */
      path?: string | null;
    } & {
      [key: string]: unknown;
    };
    /** DeleteForm */
    DeleteForm: {
      /** Collection Name */
      collection_name: string;
      /** File Id */
      file_id: string;
    };
    /** DeletePipelineForm */
    DeletePipelineForm: {
      /** Id */
      id: string;
      /** Urlidx */
      urlIdx: number;
    };
    /** DirectConnectionsConfigForm */
    DirectConnectionsConfigForm: {
      /** Enable Direct Connections */
      ENABLE_DIRECT_CONNECTIONS: boolean;
    };
    /** EmbeddingModelUpdateForm */
    EmbeddingModelUpdateForm: {
      openai_config?:
        | components["schemas"]["open_webui__routers__retrieval__OpenAIConfigForm"]
        | null;
      ollama_config?:
        | components["schemas"]["open_webui__routers__retrieval__OllamaConfigForm"]
        | null;
      /** Embedding Engine */
      embedding_engine: string;
      /** Embedding Model */
      embedding_model: string;
      /**
       * Embedding Batch Size
       * @default 1
       */
      embedding_batch_size: number | null;
    };
    /** EventForm */
    EventForm: {
      /** Type */
      type: string;
      /** Data */
      data: Record<string, never>;
    };
    /** FeaturesPermissions */
    FeaturesPermissions: {
      /**
       * Direct Tool Servers
       * @default false
       */
      direct_tool_servers: boolean;
      /**
       * Web Search
       * @default true
       */
      web_search: boolean;
      /**
       * Image Generation
       * @default true
       */
      image_generation: boolean;
      /**
       * Code Interpreter
       * @default true
       */
      code_interpreter: boolean;
      /**
       * Notes
       * @default true
       */
      notes: boolean;
    };
    /** FeedbackForm */
    FeedbackForm: {
      /** Type */
      type: string;
      data?: components["schemas"]["RatingData"] | null;
      /** Meta */
      meta?: Record<string, never> | null;
      snapshot?: components["schemas"]["SnapshotData"] | null;
    } & {
      [key: string]: unknown;
    };
    /** FeedbackModel */
    FeedbackModel: {
      /** Id */
      id: string;
      /** User Id */
      user_id: string;
      /** Version */
      version: number;
      /** Type */
      type: string;
      /** Data */
      data?: Record<string, never> | null;
      /** Meta */
      meta?: Record<string, never> | null;
      /** Snapshot */
      snapshot?: Record<string, never> | null;
      /** Created At */
      created_at: number;
      /** Updated At */
      updated_at: number;
    };
    /** FeedbackUserResponse */
    FeedbackUserResponse: {
      /** Id */
      id: string;
      /** User Id */
      user_id: string;
      /** Version */
      version: number;
      /** Type */
      type: string;
      /** Data */
      data?: Record<string, never> | null;
      /** Meta */
      meta?: Record<string, never> | null;
      /** Created At */
      created_at: number;
      /** Updated At */
      updated_at: number;
      user?:
        | components["schemas"]["open_webui__routers__evaluations__UserResponse"]
        | null;
    };
    /** FileMeta */
    FileMeta: {
      /** Name */
      name?: string | null;
      /** Content Type */
      content_type?: string | null;
      /** Size */
      size?: number | null;
    } & {
      [key: string]: unknown;
    };
    /** FileMetadataResponse */
    FileMetadataResponse: {
      /** Id */
      id: string;
      /** Meta */
      meta: Record<string, never>;
      /** Created At */
      created_at: number;
      /** Updated At */
      updated_at: number;
    };
    /** FileModel */
    FileModel: {
      /** Id */
      id: string;
      /** User Id */
      user_id: string;
      /** Hash */
      hash?: string | null;
      /** Filename */
      filename: string;
      /** Path */
      path?: string | null;
      /** Data */
      data?: Record<string, never> | null;
      /** Meta */
      meta?: Record<string, never> | null;
      /** Access Control */
      access_control?: Record<string, never> | null;
      /** Created At */
      created_at: number | null;
      /** Updated At */
      updated_at: number | null;
    };
    /** FileModelResponse */
    FileModelResponse: {
      /** Id */
      id: string;
      /** User Id */
      user_id: string;
      /** Hash */
      hash?: string | null;
      /** Filename */
      filename: string;
      /** Data */
      data?: Record<string, never> | null;
      meta: components["schemas"]["FileMeta"];
      /** Created At */
      created_at: number;
      /** Updated At */
      updated_at: number;
    } & {
      [key: string]: unknown;
    };
    /** FolderForm */
    FolderForm: {
      /** Name */
      name: string;
    } & {
      [key: string]: unknown;
    };
    /** FolderIsExpandedForm */
    FolderIsExpandedForm: {
      /** Is Expanded */
      is_expanded: boolean;
    };
    /** FolderModel */
    FolderModel: {
      /** Id */
      id: string;
      /** Parent Id */
      parent_id?: string | null;
      /** User Id */
      user_id: string;
      /** Name */
      name: string;
      /** Items */
      items?: Record<string, never> | null;
      /** Meta */
      meta?: Record<string, never> | null;
      /**
       * Is Expanded
       * @default false
       */
      is_expanded: boolean;
      /** Created At */
      created_at: number;
      /** Updated At */
      updated_at: number;
    };
    /** FolderParentIdForm */
    FolderParentIdForm: {
      /** Parent Id */
      parent_id?: string | null;
    };
    /** FunctionForm */
    FunctionForm: {
      /** Id */
      id: string;
      /** Name */
      name: string;
      /** Content */
      content: string;
      meta: components["schemas"]["FunctionMeta"];
    };
    /** FunctionMeta */
    FunctionMeta: {
      /** Description */
      description?: string | null;
      /**
       * Manifest
       * @default {}
       */
      manifest: Record<string, never> | null;
    };
    /** FunctionModel */
    FunctionModel: {
      /** Id */
      id: string;
      /** User Id */
      user_id: string;
      /** Name */
      name: string;
      /** Type */
      type: string;
      /** Content */
      content: string;
      meta: components["schemas"]["FunctionMeta"];
      /**
       * Is Active
       * @default false
       */
      is_active: boolean;
      /**
       * Is Global
       * @default false
       */
      is_global: boolean;
      /** Updated At */
      updated_at: number;
      /** Created At */
      created_at: number;
    };
    /** FunctionResponse */
    FunctionResponse: {
      /** Id */
      id: string;
      /** User Id */
      user_id: string;
      /** Type */
      type: string;
      /** Name */
      name: string;
      meta: components["schemas"]["FunctionMeta"];
      /** Is Active */
      is_active: boolean;
      /** Is Global */
      is_global: boolean;
      /** Updated At */
      updated_at: number;
      /** Created At */
      created_at: number;
    };
    /** GeminiConfigForm */
    GeminiConfigForm: {
      /** Gemini Api Base Url */
      GEMINI_API_BASE_URL: string;
      /** Gemini Api Key */
      GEMINI_API_KEY: string;
    };
    /** GenerateCompletionForm */
    GenerateCompletionForm: {
      /** Model */
      model: string;
      /** Prompt */
      prompt: string;
      /** Suffix */
      suffix?: string | null;
      /** Images */
      images?: string[] | null;
      /** Format */
      format?: Record<string, never> | string | null;
      /** Options */
      options?: Record<string, never> | null;
      /** System */
      system?: string | null;
      /** Template */
      template?: string | null;
      /** Context */
      context?: number[] | null;
      /**
       * Stream
       * @default true
       */
      stream: boolean | null;
      /** Raw */
      raw?: boolean | null;
      /** Keep Alive */
      keep_alive?: number | string | null;
    };
    /** GenerateEmbedForm */
    GenerateEmbedForm: {
      /** Model */
      model: string;
      /** Input */
      input: string[] | string;
      /** Truncate */
      truncate?: boolean | null;
      /** Options */
      options?: Record<string, never> | null;
      /** Keep Alive */
      keep_alive?: number | string | null;
    };
    /** GenerateEmbeddingsForm */
    GenerateEmbeddingsForm: {
      /** Model */
      model: string;
      /** Prompt */
      prompt: string;
      /** Options */
      options?: Record<string, never> | null;
      /** Keep Alive */
      keep_alive?: number | string | null;
    };
    /** GenerateImageForm */
    GenerateImageForm: {
      /** Model */
      model?: string | null;
      /** Prompt */
      prompt: string;
      /** Size */
      size?: string | null;
      /**
       * N
       * @default 1
       */
      n: number;
      /** Negative Prompt */
      negative_prompt?: string | null;
    };
    /** GroupForm */
    GroupForm: {
      /** Name */
      name: string;
      /** Description */
      description: string;
      /** Permissions */
      permissions?: Record<string, never> | null;
    };
    /** GroupResponse */
    GroupResponse: {
      /** Id */
      id: string;
      /** User Id */
      user_id: string;
      /** Name */
      name: string;
      /** Description */
      description: string;
      /** Permissions */
      permissions?: Record<string, never> | null;
      /** Data */
      data?: Record<string, never> | null;
      /** Meta */
      meta?: Record<string, never> | null;
      /**
       * User Ids
       * @default []
       */
      user_ids: string[];
      /** Created At */
      created_at: number;
      /** Updated At */
      updated_at: number;
    };
    /** GroupUpdateForm */
    GroupUpdateForm: {
      /** Name */
      name: string;
      /** Description */
      description: string;
      /** Permissions */
      permissions?: Record<string, never> | null;
      /** User Ids */
      user_ids?: string[] | null;
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    /** ImageConfigForm */
    ImageConfigForm: {
      /** Model */
      MODEL: string;
      /** Image Size */
      IMAGE_SIZE: string;
      /** Image Steps */
      IMAGE_STEPS: number;
    };
    /** ImportConfigForm */
    ImportConfigForm: {
      /** Config */
      config: Record<string, never>;
    };
    /** KnowledgeFileIdForm */
    KnowledgeFileIdForm: {
      /** File Id */
      file_id: string;
    };
    /** KnowledgeFilesResponse */
    KnowledgeFilesResponse: {
      /** Id */
      id: string;
      /** User Id */
      user_id: string;
      /** Name */
      name: string;
      /** Description */
      description: string;
      /** Data */
      data?: Record<string, never> | null;
      /** Meta */
      meta?: Record<string, never> | null;
      /** Access Control */
      access_control?: Record<string, never> | null;
      /** Created At */
      created_at: number;
      /** Updated At */
      updated_at: number;
      /** Files */
      files: components["schemas"]["FileMetadataResponse"][];
    };
    /** KnowledgeForm */
    KnowledgeForm: {
      /** Name */
      name: string;
      /** Description */
      description: string;
      /** Data */
      data?: Record<string, never> | null;
      /** Access Control */
      access_control?: Record<string, never> | null;
    };
    /** KnowledgeResponse */
    KnowledgeResponse: {
      /** Id */
      id: string;
      /** User Id */
      user_id: string;
      /** Name */
      name: string;
      /** Description */
      description: string;
      /** Data */
      data?: Record<string, never> | null;
      /** Meta */
      meta?: Record<string, never> | null;
      /** Access Control */
      access_control?: Record<string, never> | null;
      /** Created At */
      created_at: number;
      /** Updated At */
      updated_at: number;
      /** Files */
      files?:
        | (
            | components["schemas"]["FileMetadataResponse"]
            | Record<string, never>
          )[]
        | null;
    };
    /** KnowledgeUserResponse */
    KnowledgeUserResponse: {
      /** Id */
      id: string;
      /** User Id */
      user_id: string;
      /** Name */
      name: string;
      /** Description */
      description: string;
      /** Data */
      data?: Record<string, never> | null;
      /** Meta */
      meta?: Record<string, never> | null;
      /** Access Control */
      access_control?: Record<string, never> | null;
      /** Created At */
      created_at: number;
      /** Updated At */
      updated_at: number;
      user?:
        | components["schemas"]["open_webui__models__users__UserResponse"]
        | null;
      /** Files */
      files?:
        | (
            | components["schemas"]["FileMetadataResponse"]
            | Record<string, never>
          )[]
        | null;
    };
    /** LdapConfigForm */
    LdapConfigForm: {
      /** Enable Ldap */
      enable_ldap?: boolean | null;
    };
    /** LdapForm */
    LdapForm: {
      /** User */
      user: string;
      /** Password */
      password: string;
    };
    /** LdapServerConfig */
    LdapServerConfig: {
      /** Label */
      label: string;
      /** Host */
      host: string;
      /** Port */
      port?: number | null;
      /**
       * Attribute For Mail
       * @default mail
       */
      attribute_for_mail: string;
      /**
       * Attribute For Username
       * @default uid
       */
      attribute_for_username: string;
      /** App Dn */
      app_dn: string;
      /** App Dn Password */
      app_dn_password: string;
      /** Search Base */
      search_base: string;
      /**
       * Search Filters
       * @default
       */
      search_filters: string;
      /**
       * Use Tls
       * @default true
       */
      use_tls: boolean;
      /** Certificate Path */
      certificate_path?: string | null;
      /**
       * Validate Cert
       * @default true
       */
      validate_cert: boolean;
      /**
       * Ciphers
       * @default ALL
       */
      ciphers: string | null;
    };
    /** MarkdownForm */
    MarkdownForm: {
      /** Md */
      md: string;
    };
    /** MemoryModel */
    MemoryModel: {
      /** Id */
      id: string;
      /** User Id */
      user_id: string;
      /** Content */
      content: string;
      /** Updated At */
      updated_at: number;
      /** Created At */
      created_at: number;
    };
    /** MemoryUpdateModel */
    MemoryUpdateModel: {
      /** Content */
      content?: string | null;
    };
    /** MessageModel */
    MessageModel: {
      /** Id */
      id: string;
      /** User Id */
      user_id: string;
      /** Channel Id */
      channel_id?: string | null;
      /** Parent Id */
      parent_id?: string | null;
      /** Content */
      content: string;
      /** Data */
      data?: Record<string, never> | null;
      /** Meta */
      meta?: Record<string, never> | null;
      /** Created At */
      created_at: number;
      /** Updated At */
      updated_at: number;
    };
    /** MessageUserResponse */
    MessageUserResponse: {
      /** Id */
      id: string;
      /** User Id */
      user_id: string;
      /** Channel Id */
      channel_id?: string | null;
      /** Parent Id */
      parent_id?: string | null;
      /** Content */
      content: string;
      /** Data */
      data?: Record<string, never> | null;
      /** Meta */
      meta?: Record<string, never> | null;
      /** Created At */
      created_at: number;
      /** Updated At */
      updated_at: number;
      /** Latest Reply At */
      latest_reply_at: number | null;
      /** Reply Count */
      reply_count: number;
      /** Reactions */
      reactions: components["schemas"]["Reactions"][];
      user: components["schemas"]["UserNameResponse"];
    };
    /** ModelForm */
    ModelForm: {
      /** Id */
      id: string;
      /** Base Model Id */
      base_model_id?: string | null;
      /** Name */
      name: string;
      meta: components["schemas"]["ModelMeta"];
      params: components["schemas"]["ModelParams"];
      /** Access Control */
      access_control?: Record<string, never> | null;
      /**
       * Is Active
       * @default true
       */
      is_active: boolean;
    };
    /** ModelMeta */
    ModelMeta: {
      /**
       * Profile Image Url
       * @default /static/favicon.png
       */
      profile_image_url: string | null;
      /** Description */
      description?: string | null;
      /** Capabilities */
      capabilities?: Record<string, never> | null;
    } & {
      [key: string]: unknown;
    };
    /** ModelModel */
    ModelModel: {
      /** Id */
      id: string;
      /** User Id */
      user_id: string;
      /** Base Model Id */
      base_model_id?: string | null;
      /** Name */
      name: string;
      params: components["schemas"]["ModelParams"];
      meta: components["schemas"]["ModelMeta"];
      /** Access Control */
      access_control?: Record<string, never> | null;
      /** Is Active */
      is_active: boolean;
      /** Updated At */
      updated_at: number;
      /** Created At */
      created_at: number;
    };
    /** ModelNameForm */
    ModelNameForm: {
      /** Name */
      name: string;
    };
    /** ModelParams */
    ModelParams: {
      [key: string]: unknown;
    };
    /** ModelResponse */
    ModelResponse: {
      /** Id */
      id: string;
      /** User Id */
      user_id: string;
      /** Base Model Id */
      base_model_id?: string | null;
      /** Name */
      name: string;
      params: components["schemas"]["ModelParams"];
      meta: components["schemas"]["ModelMeta"];
      /** Access Control */
      access_control?: Record<string, never> | null;
      /** Is Active */
      is_active: boolean;
      /** Updated At */
      updated_at: number;
      /** Created At */
      created_at: number;
    };
    /** ModelUserResponse */
    ModelUserResponse: {
      /** Id */
      id: string;
      /** User Id */
      user_id: string;
      /** Base Model Id */
      base_model_id?: string | null;
      /** Name */
      name: string;
      params: components["schemas"]["ModelParams"];
      meta: components["schemas"]["ModelMeta"];
      /** Access Control */
      access_control?: Record<string, never> | null;
      /** Is Active */
      is_active: boolean;
      /** Updated At */
      updated_at: number;
      /** Created At */
      created_at: number;
      user?:
        | components["schemas"]["open_webui__models__users__UserResponse"]
        | null;
    };
    /** ModelsConfigForm */
    ModelsConfigForm: {
      /** Default Models */
      DEFAULT_MODELS: string | null;
      /** Model Order List */
      MODEL_ORDER_LIST: string[] | null;
    };
    /** NoteForm */
    NoteForm: {
      /** Title */
      title: string;
      /** Data */
      data?: Record<string, never> | null;
      /** Meta */
      meta?: Record<string, never> | null;
      /** Access Control */
      access_control?: Record<string, never> | null;
    };
    /** NoteModel */
    NoteModel: {
      /** Id */
      id: string;
      /** User Id */
      user_id: string;
      /** Title */
      title: string;
      /** Data */
      data?: Record<string, never> | null;
      /** Meta */
      meta?: Record<string, never> | null;
      /** Access Control */
      access_control?: Record<string, never> | null;
      /** Created At */
      created_at: number;
      /** Updated At */
      updated_at: number;
    };
    /** NoteUserResponse */
    NoteUserResponse: {
      /** Id */
      id: string;
      /** User Id */
      user_id: string;
      /** Title */
      title: string;
      /** Data */
      data?: Record<string, never> | null;
      /** Meta */
      meta?: Record<string, never> | null;
      /** Access Control */
      access_control?: Record<string, never> | null;
      /** Created At */
      created_at: number;
      /** Updated At */
      updated_at: number;
      user?:
        | components["schemas"]["open_webui__models__users__UserResponse"]
        | null;
    };
    /** ProcessFileForm */
    ProcessFileForm: {
      /** File Id */
      file_id: string;
      /** Content */
      content?: string | null;
      /** Collection Name */
      collection_name?: string | null;
    };
    /** ProcessTextForm */
    ProcessTextForm: {
      /** Name */
      name: string;
      /** Content */
      content: string;
      /** Collection Name */
      collection_name?: string | null;
    };
    /** ProcessUrlForm */
    ProcessUrlForm: {
      /** Collection Name */
      collection_name?: string | null;
      /** Url */
      url: string;
    };
    /** PromptForm */
    PromptForm: {
      /** Command */
      command: string;
      /** Title */
      title: string;
      /** Content */
      content: string;
      /** Access Control */
      access_control?: Record<string, never> | null;
    };
    /** PromptModel */
    PromptModel: {
      /** Command */
      command: string;
      /** User Id */
      user_id: string;
      /** Title */
      title: string;
      /** Content */
      content: string;
      /** Timestamp */
      timestamp: number;
      /** Access Control */
      access_control?: Record<string, never> | null;
    };
    /** PromptSuggestion */
    PromptSuggestion: {
      /** Title */
      title: string[];
      /** Content */
      content: string;
    };
    /** PromptUserResponse */
    PromptUserResponse: {
      /** Command */
      command: string;
      /** User Id */
      user_id: string;
      /** Title */
      title: string;
      /** Content */
      content: string;
      /** Timestamp */
      timestamp: number;
      /** Access Control */
      access_control?: Record<string, never> | null;
      user?:
        | components["schemas"]["open_webui__models__users__UserResponse"]
        | null;
    };
    /** PushModelForm */
    PushModelForm: {
      /** Name */
      name: string;
      /** Insecure */
      insecure?: boolean | null;
      /** Stream */
      stream?: boolean | null;
    };
    /** QueryCollectionsForm */
    QueryCollectionsForm: {
      /** Collection Names */
      collection_names: string[];
      /** Query */
      query: string;
      /** K */
      k?: number | null;
      /** K Reranker */
      k_reranker?: number | null;
      /** R */
      r?: number | null;
      /** Hybrid */
      hybrid?: boolean | null;
    };
    /** QueryDocForm */
    QueryDocForm: {
      /** Collection Name */
      collection_name: string;
      /** Query */
      query: string;
      /** K */
      k?: number | null;
      /** K Reranker */
      k_reranker?: number | null;
      /** R */
      r?: number | null;
      /** Hybrid */
      hybrid?: boolean | null;
    };
    /** QueryMemoryForm */
    QueryMemoryForm: {
      /** Content */
      content: string;
      /**
       * K
       * @default 1
       */
      k: number | null;
    };
    /** RatingData */
    RatingData: {
      /** Rating */
      rating?: number | string | null;
      /** Model Id */
      model_id?: string | null;
      /** Sibling Model Ids */
      sibling_model_ids?: string[] | null;
      /** Reason */
      reason?: string | null;
      /** Comment */
      comment?: string | null;
    } & {
      [key: string]: unknown;
    };
    /** ReactionForm */
    ReactionForm: {
      /** Name */
      name: string;
    };
    /** Reactions */
    Reactions: {
      /** Name */
      name: string;
      /** User Ids */
      user_ids: string[];
      /** Count */
      count: number;
    };
    /** STTConfigForm */
    STTConfigForm: {
      /** Openai Api Base Url */
      OPENAI_API_BASE_URL: string;
      /** Openai Api Key */
      OPENAI_API_KEY: string;
      /** Engine */
      ENGINE: string;
      /** Model */
      MODEL: string;
      /** Whisper Model */
      WHISPER_MODEL: string;
      /** Deepgram Api Key */
      DEEPGRAM_API_KEY: string;
      /** Azure Api Key */
      AZURE_API_KEY: string;
      /** Azure Region */
      AZURE_REGION: string;
      /** Azure Locales */
      AZURE_LOCALES: string;
      /** Azure Base Url */
      AZURE_BASE_URL: string;
      /** Azure Max Speakers */
      AZURE_MAX_SPEAKERS: string;
    };
    /** SearchForm */
    SearchForm: {
      /** Queries */
      queries: string[];
    };
    /** SessionUserResponse */
    SessionUserResponse: {
      /** Id */
      id: string;
      /** Email */
      email: string;
      /** Name */
      name: string;
      /** Role */
      role: string;
      /** Profile Image Url */
      profile_image_url: string;
      /** Token */
      token: string;
      /** Token Type */
      token_type: string;
      /** Expires At */
      expires_at?: number | null;
      /** Permissions */
      permissions?: Record<string, never> | null;
    };
    /** SetBannersForm */
    SetBannersForm: {
      /** Banners */
      banners: components["schemas"]["BannerModel"][];
    };
    /** SetDefaultSuggestionsForm */
    SetDefaultSuggestionsForm: {
      /** Suggestions */
      suggestions: components["schemas"]["PromptSuggestion"][];
    };
    /** SharingPermissions */
    SharingPermissions: {
      /**
       * Public Models
       * @default true
       */
      public_models: boolean;
      /**
       * Public Knowledge
       * @default true
       */
      public_knowledge: boolean;
      /**
       * Public Prompts
       * @default true
       */
      public_prompts: boolean;
      /**
       * Public Tools
       * @default true
       */
      public_tools: boolean;
    };
    /** SigninForm */
    SigninForm: {
      /** Email */
      email: string;
      /** Password */
      password: string;
    };
    /** SigninResponse */
    SigninResponse: {
      /** Id */
      id: string;
      /** Email */
      email: string;
      /** Name */
      name: string;
      /** Role */
      role: string;
      /** Profile Image Url */
      profile_image_url: string;
      /** Token */
      token: string;
      /** Token Type */
      token_type: string;
    };
    /** SignupForm */
    SignupForm: {
      /** Name */
      name: string;
      /** Email */
      email: string;
      /** Password */
      password: string;
      /**
       * Profile Image Url
       * @default /user.png
       */
      profile_image_url: string | null;
    };
    /** SnapshotData */
    SnapshotData: {
      /** Chat */
      chat?: Record<string, never> | null;
    } & {
      [key: string]: unknown;
    };
    /** TTSConfigForm */
    TTSConfigForm: {
      /** Openai Api Base Url */
      OPENAI_API_BASE_URL: string;
      /** Openai Api Key */
      OPENAI_API_KEY: string;
      /** Api Key */
      API_KEY: string;
      /** Engine */
      ENGINE: string;
      /** Model */
      MODEL: string;
      /** Voice */
      VOICE: string;
      /** Split On */
      SPLIT_ON: string;
      /** Azure Speech Region */
      AZURE_SPEECH_REGION: string;
      /** Azure Speech Base Url */
      AZURE_SPEECH_BASE_URL: string;
      /** Azure Speech Output Format */
      AZURE_SPEECH_OUTPUT_FORMAT: string;
    };
    /** TagFilterForm */
    TagFilterForm: {
      /** Name */
      name: string;
      /**
       * Skip
       * @default 0
       */
      skip: number | null;
      /**
       * Limit
       * @default 50
       */
      limit: number | null;
    };
    /** TagForm */
    TagForm: {
      /** Name */
      name: string;
    };
    /** TagModel */
    TagModel: {
      /** Id */
      id: string;
      /** Name */
      name: string;
      /** User Id */
      user_id: string;
      /** Meta */
      meta?: Record<string, never> | null;
    };
    /** TaskConfigForm */
    TaskConfigForm: {
      /** Task Model */
      TASK_MODEL: string | null;
      /** Task Model External */
      TASK_MODEL_EXTERNAL: string | null;
      /** Enable Title Generation */
      ENABLE_TITLE_GENERATION: boolean;
      /** Title Generation Prompt Template */
      TITLE_GENERATION_PROMPT_TEMPLATE: string;
      /** Image Prompt Generation Prompt Template */
      IMAGE_PROMPT_GENERATION_PROMPT_TEMPLATE: string;
      /** Enable Autocomplete Generation */
      ENABLE_AUTOCOMPLETE_GENERATION: boolean;
      /** Autocomplete Generation Input Max Length */
      AUTOCOMPLETE_GENERATION_INPUT_MAX_LENGTH: number;
      /** Tags Generation Prompt Template */
      TAGS_GENERATION_PROMPT_TEMPLATE: string;
      /** Enable Tags Generation */
      ENABLE_TAGS_GENERATION: boolean;
      /** Enable Search Query Generation */
      ENABLE_SEARCH_QUERY_GENERATION: boolean;
      /** Enable Retrieval Query Generation */
      ENABLE_RETRIEVAL_QUERY_GENERATION: boolean;
      /** Query Generation Prompt Template */
      QUERY_GENERATION_PROMPT_TEMPLATE: string;
      /** Tools Function Calling Prompt Template */
      TOOLS_FUNCTION_CALLING_PROMPT_TEMPLATE: string;
    };
    /** ToolForm */
    ToolForm: {
      /** Id */
      id: string;
      /** Name */
      name: string;
      /** Content */
      content: string;
      meta: components["schemas"]["ToolMeta"];
      /** Access Control */
      access_control?: Record<string, never> | null;
    };
    /** ToolMeta */
    ToolMeta: {
      /** Description */
      description?: string | null;
      /**
       * Manifest
       * @default {}
       */
      manifest: Record<string, never> | null;
    };
    /** ToolModel */
    ToolModel: {
      /** Id */
      id: string;
      /** User Id */
      user_id: string;
      /** Name */
      name: string;
      /** Content */
      content: string;
      /** Specs */
      specs: Record<string, never>[];
      meta: components["schemas"]["ToolMeta"];
      /** Access Control */
      access_control?: Record<string, never> | null;
      /** Updated At */
      updated_at: number;
      /** Created At */
      created_at: number;
    };
    /** ToolResponse */
    ToolResponse: {
      /** Id */
      id: string;
      /** User Id */
      user_id: string;
      /** Name */
      name: string;
      meta: components["schemas"]["ToolMeta"];
      /** Access Control */
      access_control?: Record<string, never> | null;
      /** Updated At */
      updated_at: number;
      /** Created At */
      created_at: number;
    };
    /** ToolServerConnection */
    ToolServerConnection: {
      /** Url */
      url: string;
      /** Path */
      path: string;
      /** Auth Type */
      auth_type: string | null;
      /** Key */
      key: string | null;
      /** Config */
      config: Record<string, never> | null;
    } & {
      [key: string]: unknown;
    };
    /** ToolServersConfigForm */
    ToolServersConfigForm: {
      /** Tool Server Connections */
      TOOL_SERVER_CONNECTIONS: components["schemas"]["ToolServerConnection"][];
    };
    /** ToolUserResponse */
    ToolUserResponse: {
      /** Id */
      id: string;
      /** User Id */
      user_id: string;
      /** Name */
      name: string;
      meta: components["schemas"]["ToolMeta"];
      /** Access Control */
      access_control?: Record<string, never> | null;
      /** Updated At */
      updated_at: number;
      /** Created At */
      created_at: number;
      user?:
        | components["schemas"]["open_webui__models__users__UserResponse"]
        | null;
    };
    /** UpdateConfigForm */
    UpdateConfigForm: {
      /** Enable Evaluation Arena Models */
      ENABLE_EVALUATION_ARENA_MODELS?: boolean | null;
      /** Evaluation Arena Models */
      EVALUATION_ARENA_MODELS?: Record<string, never>[] | null;
    };
    /** UpdatePasswordForm */
    UpdatePasswordForm: {
      /** Password */
      password: string;
      /** New Password */
      new_password: string;
    };
    /** UpdateProfileForm */
    UpdateProfileForm: {
      /** Profile Image Url */
      profile_image_url: string;
      /** Name */
      name: string;
    };
    /** UrlForm */
    UrlForm: {
      /** Url */
      url: string;
    };
    /** UserListResponse */
    UserListResponse: {
      /** Users */
      users: components["schemas"]["UserModel"][];
      /** Total */
      total: number;
    };
    /** UserModel */
    UserModel: {
      /** Id */
      id: string;
      /** Name */
      name: string;
      /** Email */
      email: string;
      /**
       * Role
       * @default pending
       */
      role: string;
      /** Profile Image Url */
      profile_image_url: string;
      /** Last Active At */
      last_active_at: number;
      /** Updated At */
      updated_at: number;
      /** Created At */
      created_at: number;
      /** Api Key */
      api_key?: string | null;
      settings?: components["schemas"]["UserSettings"] | null;
      /** Info */
      info?: Record<string, never> | null;
      /** Oauth Sub */
      oauth_sub?: string | null;
    };
    /** UserNameResponse */
    UserNameResponse: {
      /** Id */
      id: string;
      /** Name */
      name: string;
      /** Role */
      role: string;
      /** Profile Image Url */
      profile_image_url: string;
    };
    /** UserPermissions */
    UserPermissions: {
      workspace: components["schemas"]["WorkspacePermissions"];
      sharing: components["schemas"]["SharingPermissions"];
      chat: components["schemas"]["ChatPermissions"];
      features: components["schemas"]["FeaturesPermissions"];
    };
    /** UserRoleUpdateForm */
    UserRoleUpdateForm: {
      /** Id */
      id: string;
      /** Role */
      role: string;
    };
    /** UserSettings */
    UserSettings: {
      /**
       * Ui
       * @default {}
       */
      ui: Record<string, never> | null;
    } & {
      [key: string]: unknown;
    };
    /** UserUpdateForm */
    UserUpdateForm: {
      /** Name */
      name: string;
      /** Email */
      email: string;
      /** Profile Image Url */
      profile_image_url: string;
      /** Password */
      password?: string | null;
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
    /** WebConfig */
    WebConfig: {
      /** Enable Web Search */
      ENABLE_WEB_SEARCH?: boolean | null;
      /** Web Search Engine */
      WEB_SEARCH_ENGINE?: string | null;
      /** Web Search Trust Env */
      WEB_SEARCH_TRUST_ENV?: boolean | null;
      /** Web Search Result Count */
      WEB_SEARCH_RESULT_COUNT?: number | null;
      /** Web Search Concurrent Requests */
      WEB_SEARCH_CONCURRENT_REQUESTS?: number | null;
      /**
       * Web Search Domain Filter List
       * @default []
       */
      WEB_SEARCH_DOMAIN_FILTER_LIST: string[] | null;
      /** Bypass Web Search Embedding And Retrieval */
      BYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL?: boolean | null;
      /** Searxng Query Url */
      SEARXNG_QUERY_URL?: string | null;
      /** Yacy Query Url */
      YACY_QUERY_URL?: string | null;
      /** Yacy Username */
      YACY_USERNAME?: string | null;
      /** Yacy Password */
      YACY_PASSWORD?: string | null;
      /** Google Pse Api Key */
      GOOGLE_PSE_API_KEY?: string | null;
      /** Google Pse Engine Id */
      GOOGLE_PSE_ENGINE_ID?: string | null;
      /** Brave Search Api Key */
      BRAVE_SEARCH_API_KEY?: string | null;
      /** Kagi Search Api Key */
      KAGI_SEARCH_API_KEY?: string | null;
      /** Mojeek Search Api Key */
      MOJEEK_SEARCH_API_KEY?: string | null;
      /** Bocha Search Api Key */
      BOCHA_SEARCH_API_KEY?: string | null;
      /** Serpstack Api Key */
      SERPSTACK_API_KEY?: string | null;
      /** Serpstack Https */
      SERPSTACK_HTTPS?: boolean | null;
      /** Serper Api Key */
      SERPER_API_KEY?: string | null;
      /** Serply Api Key */
      SERPLY_API_KEY?: string | null;
      /** Tavily Api Key */
      TAVILY_API_KEY?: string | null;
      /** Searchapi Api Key */
      SEARCHAPI_API_KEY?: string | null;
      /** Searchapi Engine */
      SEARCHAPI_ENGINE?: string | null;
      /** Serpapi Api Key */
      SERPAPI_API_KEY?: string | null;
      /** Serpapi Engine */
      SERPAPI_ENGINE?: string | null;
      /** Jina Api Key */
      JINA_API_KEY?: string | null;
      /** Bing Search V7 Endpoint */
      BING_SEARCH_V7_ENDPOINT?: string | null;
      /** Bing Search V7 Subscription Key */
      BING_SEARCH_V7_SUBSCRIPTION_KEY?: string | null;
      /** Exa Api Key */
      EXA_API_KEY?: string | null;
      /** Perplexity Api Key */
      PERPLEXITY_API_KEY?: string | null;
      /** Sougou Api Sid */
      SOUGOU_API_SID?: string | null;
      /** Sougou Api Sk */
      SOUGOU_API_SK?: string | null;
      /** Web Loader Engine */
      WEB_LOADER_ENGINE?: string | null;
      /** Enable Web Loader Ssl Verification */
      ENABLE_WEB_LOADER_SSL_VERIFICATION?: boolean | null;
      /** Playwright Ws Url */
      PLAYWRIGHT_WS_URL?: string | null;
      /** Playwright Timeout */
      PLAYWRIGHT_TIMEOUT?: number | null;
      /** Firecrawl Api Key */
      FIRECRAWL_API_KEY?: string | null;
      /** Firecrawl Api Base Url */
      FIRECRAWL_API_BASE_URL?: string | null;
      /** Tavily Extract Depth */
      TAVILY_EXTRACT_DEPTH?: string | null;
      /** External Web Search Url */
      EXTERNAL_WEB_SEARCH_URL?: string | null;
      /** External Web Search Api Key */
      EXTERNAL_WEB_SEARCH_API_KEY?: string | null;
      /** External Web Loader Url */
      EXTERNAL_WEB_LOADER_URL?: string | null;
      /** External Web Loader Api Key */
      EXTERNAL_WEB_LOADER_API_KEY?: string | null;
      /** Youtube Loader Language */
      YOUTUBE_LOADER_LANGUAGE?: string[] | null;
      /** Youtube Loader Proxy Url */
      YOUTUBE_LOADER_PROXY_URL?: string | null;
      /** Youtube Loader Translation */
      YOUTUBE_LOADER_TRANSLATION?: string | null;
    };
    /** WorkspacePermissions */
    WorkspacePermissions: {
      /**
       * Models
       * @default false
       */
      models: boolean;
      /**
       * Knowledge
       * @default false
       */
      knowledge: boolean;
      /**
       * Prompts
       * @default false
       */
      prompts: boolean;
      /**
       * Tools
       * @default false
       */
      tools: boolean;
    };
    /** UserResponse */
    open_webui__models__auths__UserResponse: {
      /** Id */
      id: string;
      /** Email */
      email: string;
      /** Name */
      name: string;
      /** Role */
      role: string;
      /** Profile Image Url */
      profile_image_url: string;
    };
    /** MessageForm */
    open_webui__models__messages__MessageForm: {
      /** Content */
      content: string;
      /** Parent Id */
      parent_id?: string | null;
      /** Data */
      data?: Record<string, never> | null;
      /** Meta */
      meta?: Record<string, never> | null;
    };
    /** UserResponse */
    open_webui__models__users__UserResponse: {
      /** Id */
      id: string;
      /** Name */
      name: string;
      /** Email */
      email: string;
      /** Role */
      role: string;
      /** Profile Image Url */
      profile_image_url: string;
    };
    /** MessageForm */
    open_webui__routers__chats__MessageForm: {
      /** Content */
      content: string;
    };
    /** UserResponse */
    open_webui__routers__evaluations__UserResponse: {
      /** Id */
      id: string;
      /** Name */
      name: string;
      /** Email */
      email: string;
      /**
       * Role
       * @default pending
       */
      role: string;
      /** Last Active At */
      last_active_at: number;
      /** Updated At */
      updated_at: number;
      /** Created At */
      created_at: number;
    };
    /** ConfigForm */
    open_webui__routers__images__ConfigForm: {
      /** Enabled */
      enabled: boolean;
      /** Engine */
      engine: string;
      /** Prompt Generation */
      prompt_generation: boolean;
      openai: components["schemas"]["open_webui__routers__images__OpenAIConfigForm"];
      automatic1111: components["schemas"]["Automatic1111ConfigForm"];
      comfyui: components["schemas"]["ComfyUIConfigForm"];
      gemini: components["schemas"]["GeminiConfigForm"];
    };
    /** OpenAIConfigForm */
    open_webui__routers__images__OpenAIConfigForm: {
      /** Openai Api Base Url */
      OPENAI_API_BASE_URL: string;
      /** Openai Api Key */
      OPENAI_API_KEY: string;
    };
    /** ConnectionVerificationForm */
    open_webui__routers__ollama__ConnectionVerificationForm: {
      /** Url */
      url: string;
      /** Key */
      key?: string | null;
    };
    /** OllamaConfigForm */
    open_webui__routers__ollama__OllamaConfigForm: {
      /** Enable Ollama Api */
      ENABLE_OLLAMA_API?: boolean | null;
      /** Ollama Base Urls */
      OLLAMA_BASE_URLS: string[];
      /** Ollama Api Configs */
      OLLAMA_API_CONFIGS: Record<string, never>;
    };
    /** ConnectionVerificationForm */
    open_webui__routers__openai__ConnectionVerificationForm: {
      /** Url */
      url: string;
      /** Key */
      key: string;
      /** Config */
      config?: Record<string, never> | null;
    };
    /** OpenAIConfigForm */
    open_webui__routers__openai__OpenAIConfigForm: {
      /** Enable Openai Api */
      ENABLE_OPENAI_API?: boolean | null;
      /** Openai Api Base Urls */
      OPENAI_API_BASE_URLS: string[];
      /** Openai Api Keys */
      OPENAI_API_KEYS: string[];
      /** Openai Api Configs */
      OPENAI_API_CONFIGS: Record<string, never>;
    };
    /** ConfigForm */
    open_webui__routers__retrieval__ConfigForm: {
      /** Rag Template */
      RAG_TEMPLATE?: string | null;
      /** Top K */
      TOP_K?: number | null;
      /** Bypass Embedding And Retrieval */
      BYPASS_EMBEDDING_AND_RETRIEVAL?: boolean | null;
      /** Rag Full Context */
      RAG_FULL_CONTEXT?: boolean | null;
      /** Enable Rag Hybrid Search */
      ENABLE_RAG_HYBRID_SEARCH?: boolean | null;
      /** Top K Reranker */
      TOP_K_RERANKER?: number | null;
      /** Relevance Threshold */
      RELEVANCE_THRESHOLD?: number | null;
      /** Content Extraction Engine */
      CONTENT_EXTRACTION_ENGINE?: string | null;
      /** Pdf Extract Images */
      PDF_EXTRACT_IMAGES?: boolean | null;
      /** External Document Loader Url */
      EXTERNAL_DOCUMENT_LOADER_URL?: string | null;
      /** External Document Loader Api Key */
      EXTERNAL_DOCUMENT_LOADER_API_KEY?: string | null;
      /** Tika Server Url */
      TIKA_SERVER_URL?: string | null;
      /** Docling Server Url */
      DOCLING_SERVER_URL?: string | null;
      /** Docling Ocr Engine */
      DOCLING_OCR_ENGINE?: string | null;
      /** Docling Ocr Lang */
      DOCLING_OCR_LANG?: string | null;
      /** Docling Do Picture Description */
      DOCLING_DO_PICTURE_DESCRIPTION?: boolean | null;
      /** Document Intelligence Endpoint */
      DOCUMENT_INTELLIGENCE_ENDPOINT?: string | null;
      /** Document Intelligence Key */
      DOCUMENT_INTELLIGENCE_KEY?: string | null;
      /** Mistral Ocr Api Key */
      MISTRAL_OCR_API_KEY?: string | null;
      /** Rag Reranking Model */
      RAG_RERANKING_MODEL?: string | null;
      /** Rag Reranking Engine */
      RAG_RERANKING_ENGINE?: string | null;
      /** Rag External Reranker Url */
      RAG_EXTERNAL_RERANKER_URL?: string | null;
      /** Rag External Reranker Api Key */
      RAG_EXTERNAL_RERANKER_API_KEY?: string | null;
      /** Text Splitter */
      TEXT_SPLITTER?: string | null;
      /** Chunk Size */
      CHUNK_SIZE?: number | null;
      /** Chunk Overlap */
      CHUNK_OVERLAP?: number | null;
      /** File Max Size */
      FILE_MAX_SIZE?: number | null;
      /** File Max Count */
      FILE_MAX_COUNT?: number | null;
      /** Allowed File Extensions */
      ALLOWED_FILE_EXTENSIONS?: string[] | null;
      /** Enable Google Drive Integration */
      ENABLE_GOOGLE_DRIVE_INTEGRATION?: boolean | null;
      /** Enable Onedrive Integration */
      ENABLE_ONEDRIVE_INTEGRATION?: boolean | null;
      web?: components["schemas"]["WebConfig"] | null;
    };
    /** OllamaConfigForm */
    open_webui__routers__retrieval__OllamaConfigForm: {
      /** Url */
      url: string;
      /** Key */
      key: string;
    };
    /** OpenAIConfigForm */
    open_webui__routers__retrieval__OpenAIConfigForm: {
      /** Url */
      url: string;
      /** Key */
      key: string;
    };
    /** UserResponse */
    open_webui__routers__users__UserResponse: {
      /** Name */
      name: string;
      /** Profile Image Url */
      profile_image_url: string;
      /** Active */
      active?: boolean | null;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
  get_status_ollama__get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  get_status_ollama__head: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  verify_connection_ollama_verify_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["open_webui__routers__ollama__ConnectionVerificationForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_config_ollama_config_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  update_config_ollama_config_update_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["open_webui__routers__ollama__OllamaConfigForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_ollama_tags_ollama_api_tags__url_idx__get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        url_idx: number | null;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_ollama_tags_ollama_api_tags_get: {
    parameters: {
      query?: {
        url_idx?: number | null;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_ollama_versions_ollama_api_version__url_idx__get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        url_idx: number | null;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_ollama_versions_ollama_api_version_get: {
    parameters: {
      query?: {
        url_idx?: number | null;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_ollama_loaded_models_ollama_api_ps_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  pull_model_ollama_api_pull__url_idx__post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        url_idx: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ModelNameForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  pull_model_ollama_api_pull_post: {
    parameters: {
      query?: {
        url_idx?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ModelNameForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  push_model_ollama_api_push__url_idx__delete: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        url_idx: number | null;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PushModelForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  push_model_ollama_api_push_delete: {
    parameters: {
      query?: {
        url_idx?: number | null;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PushModelForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  create_model_ollama_api_create__url_idx__post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        url_idx: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateModelForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  create_model_ollama_api_create_post: {
    parameters: {
      query?: {
        url_idx?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateModelForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  copy_model_ollama_api_copy__url_idx__post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        url_idx: number | null;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CopyModelForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  copy_model_ollama_api_copy_post: {
    parameters: {
      query?: {
        url_idx?: number | null;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CopyModelForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  delete_model_ollama_api_delete__url_idx__delete: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        url_idx: number | null;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ModelNameForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  delete_model_ollama_api_delete_delete: {
    parameters: {
      query?: {
        url_idx?: number | null;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ModelNameForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  show_model_info_ollama_api_show_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ModelNameForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  embed_ollama_api_embed__url_idx__post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        url_idx: number | null;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["GenerateEmbedForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  embed_ollama_api_embed_post: {
    parameters: {
      query?: {
        url_idx?: number | null;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["GenerateEmbedForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  embeddings_ollama_api_embeddings__url_idx__post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        url_idx: number | null;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["GenerateEmbeddingsForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  embeddings_ollama_api_embeddings_post: {
    parameters: {
      query?: {
        url_idx?: number | null;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["GenerateEmbeddingsForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  generate_completion_ollama_api_generate__url_idx__post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        url_idx: number | null;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["GenerateCompletionForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  generate_completion_ollama_api_generate_post: {
    parameters: {
      query?: {
        url_idx?: number | null;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["GenerateCompletionForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  generate_chat_completion_ollama_api_chat__url_idx__post: {
    parameters: {
      query?: {
        bypass_filter?: boolean | null;
      };
      header?: never;
      path: {
        url_idx: number | null;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": Record<string, never>;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  generate_chat_completion_ollama_api_chat_post: {
    parameters: {
      query?: {
        url_idx?: number | null;
        bypass_filter?: boolean | null;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": Record<string, never>;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  generate_openai_completion_ollama_v1_completions__url_idx__post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        url_idx: number | null;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": Record<string, never>;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  generate_openai_completion_ollama_v1_completions_post: {
    parameters: {
      query?: {
        url_idx?: number | null;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": Record<string, never>;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  generate_openai_chat_completion_ollama_v1_chat_completions__url_idx__post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        url_idx: number | null;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": Record<string, never>;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  generate_openai_chat_completion_ollama_v1_chat_completions_post: {
    parameters: {
      query?: {
        url_idx?: number | null;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": Record<string, never>;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_openai_models_ollama_v1_models__url_idx__get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        url_idx: number | null;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_openai_models_ollama_v1_models_get: {
    parameters: {
      query?: {
        url_idx?: number | null;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  download_model_ollama_models_download__url_idx__post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        url_idx: number | null;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UrlForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  download_model_ollama_models_download_post: {
    parameters: {
      query?: {
        url_idx?: number | null;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UrlForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  upload_model_ollama_models_upload__url_idx__post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        url_idx: number | null;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["Body_upload_model_ollama_models_upload__url_idx__post"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  upload_model_ollama_models_upload_post: {
    parameters: {
      query?: {
        url_idx?: number | null;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["Body_upload_model_ollama_models_upload_post"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_config_openai_config_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  update_config_openai_config_update_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["open_webui__routers__openai__OpenAIConfigForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  speech_openai_audio_speech_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  get_models_openai_models__url_idx__get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        url_idx: number | null;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_models_openai_models_get: {
    parameters: {
      query?: {
        url_idx?: number | null;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  verify_connection_openai_verify_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["open_webui__routers__openai__ConnectionVerificationForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  generate_chat_completion_openai_chat_completions_post: {
    parameters: {
      query?: {
        bypass_filter?: boolean | null;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": Record<string, never>;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  proxy_openai__path__post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        path: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  proxy_openai__path__post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        path: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  proxy_openai__path__post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        path: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  proxy_openai__path__post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        path: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_pipelines_list_api_v1_pipelines_list_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  upload_pipeline_api_v1_pipelines_upload_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["Body_upload_pipeline_api_v1_pipelines_upload_post"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  add_pipeline_api_v1_pipelines_add_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AddPipelineForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  delete_pipeline_api_v1_pipelines_delete_delete: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["DeletePipelineForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_pipelines_api_v1_pipelines__get: {
    parameters: {
      query?: {
        urlIdx?: number | null;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_pipeline_valves_api_v1_pipelines__pipeline_id__valves_get: {
    parameters: {
      query: {
        urlIdx: number | null;
      };
      header?: never;
      path: {
        pipeline_id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_pipeline_valves_spec_api_v1_pipelines__pipeline_id__valves_spec_get: {
    parameters: {
      query: {
        urlIdx: number | null;
      };
      header?: never;
      path: {
        pipeline_id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_pipeline_valves_api_v1_pipelines__pipeline_id__valves_update_post: {
    parameters: {
      query: {
        urlIdx: number | null;
      };
      header?: never;
      path: {
        pipeline_id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": Record<string, never>;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_task_config_api_v1_tasks_config_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  update_task_config_api_v1_tasks_config_update_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["TaskConfigForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  generate_title_api_v1_tasks_title_completions_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": Record<string, never>;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  generate_chat_tags_api_v1_tasks_tags_completions_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": Record<string, never>;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  generate_image_prompt_api_v1_tasks_image_prompt_completions_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": Record<string, never>;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  generate_queries_api_v1_tasks_queries_completions_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": Record<string, never>;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  generate_autocompletion_api_v1_tasks_auto_completions_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": Record<string, never>;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  generate_emoji_api_v1_tasks_emoji_completions_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": Record<string, never>;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  generate_moa_response_api_v1_tasks_moa_completions_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": Record<string, never>;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_config_api_v1_images_config_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  update_config_api_v1_images_config_update_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["open_webui__routers__images__ConfigForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  verify_url_api_v1_images_config_url_verify_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  get_image_config_api_v1_images_image_config_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  update_image_config_api_v1_images_image_config_update_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ImageConfigForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_models_api_v1_images_models_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  image_generations_api_v1_images_generations_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["GenerateImageForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_audio_config_api_v1_audio_config_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  update_audio_config_api_v1_audio_config_update_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AudioConfigUpdateForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  speech_api_v1_audio_speech_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  transcription_api_v1_audio_transcriptions_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["Body_transcription_api_v1_audio_transcriptions_post"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_models_api_v1_audio_models_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  get_voices_api_v1_audio_voices_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  get_status_api_v1_retrieval__get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  get_embedding_config_api_v1_retrieval_embedding_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  update_embedding_config_api_v1_retrieval_embedding_update_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["EmbeddingModelUpdateForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_rag_config_api_v1_retrieval_config_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  update_rag_config_api_v1_retrieval_config_update_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["open_webui__routers__retrieval__ConfigForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  process_file_api_v1_retrieval_process_file_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProcessFileForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  process_text_api_v1_retrieval_process_text_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProcessTextForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  process_youtube_video_api_v1_retrieval_process_youtube_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProcessUrlForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  process_web_api_v1_retrieval_process_web_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProcessUrlForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  process_web_search_api_v1_retrieval_process_web_search_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["SearchForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  query_doc_handler_api_v1_retrieval_query_doc_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["QueryDocForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  query_collection_handler_api_v1_retrieval_query_collection_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["QueryCollectionsForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  delete_entries_from_collection_api_v1_retrieval_delete_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["DeleteForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  reset_vector_db_api_v1_retrieval_reset_db_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  reset_upload_dir_api_v1_retrieval_reset_uploads_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": boolean;
        };
      };
    };
  };
  get_embeddings_api_v1_retrieval_ef__text__get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        text: string | null;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  process_files_batch_api_v1_retrieval_process_files_batch_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["BatchProcessFilesForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["BatchProcessFilesResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  import_config_api_v1_configs_import_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ImportConfigForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": Record<string, never>;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  export_config_api_v1_configs_export_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": Record<string, never>;
        };
      };
    };
  };
  get_direct_connections_config_api_v1_configs_direct_connections_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["DirectConnectionsConfigForm"];
        };
      };
    };
  };
  set_direct_connections_config_api_v1_configs_direct_connections_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["DirectConnectionsConfigForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["DirectConnectionsConfigForm"];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_tool_servers_config_api_v1_configs_tool_servers_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ToolServersConfigForm"];
        };
      };
    };
  };
  set_tool_servers_config_api_v1_configs_tool_servers_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ToolServersConfigForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ToolServersConfigForm"];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  verify_tool_servers_config_api_v1_configs_tool_servers_verify_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ToolServerConnection"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_code_execution_config_api_v1_configs_code_execution_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["CodeInterpreterConfigForm"];
        };
      };
    };
  };
  set_code_execution_config_api_v1_configs_code_execution_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CodeInterpreterConfigForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["CodeInterpreterConfigForm"];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_models_config_api_v1_configs_models_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ModelsConfigForm"];
        };
      };
    };
  };
  set_models_config_api_v1_configs_models_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ModelsConfigForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ModelsConfigForm"];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  set_default_suggestions_api_v1_configs_suggestions_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["SetDefaultSuggestionsForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PromptSuggestion"][];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_banners_api_v1_configs_banners_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["BannerModel"][];
        };
      };
    };
  };
  set_banners_api_v1_configs_banners_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["SetBannersForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["BannerModel"][];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_session_user_api_v1_auths__get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["SessionUserResponse"];
        };
      };
    };
  };
  update_profile_api_v1_auths_update_profile_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateProfileForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["open_webui__models__auths__UserResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_password_api_v1_auths_update_password_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdatePasswordForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": boolean;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  ldap_auth_api_v1_auths_ldap_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["LdapForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["SessionUserResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  signin_api_v1_auths_signin_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["SigninForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["SessionUserResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  signup_api_v1_auths_signup_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["SignupForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["SessionUserResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  signout_api_v1_auths_signout_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  add_user_api_v1_auths_add_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AddUserForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["SigninResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_admin_details_api_v1_auths_admin_details_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  get_admin_config_api_v1_auths_admin_config_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  update_admin_config_api_v1_auths_admin_config_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AdminConfig"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_ldap_server_api_v1_auths_admin_config_ldap_server_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["LdapServerConfig"];
        };
      };
    };
  };
  update_ldap_server_api_v1_auths_admin_config_ldap_server_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["LdapServerConfig"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_ldap_config_api_v1_auths_admin_config_ldap_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  update_ldap_config_api_v1_auths_admin_config_ldap_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["LdapConfigForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_api_key_api_v1_auths_api_key_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ApiKey"];
        };
      };
    };
  };
  generate_api_key_api_v1_auths_api_key_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ApiKey"];
        };
      };
    };
  };
  delete_api_key_api_v1_auths_api_key_delete: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": boolean;
        };
      };
    };
  };
  get_users_api_v1_users__get: {
    parameters: {
      query?: {
        query?: string | null;
        order_by?: string | null;
        direction?: string | null;
        page?: number | null;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UserListResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_all_users_api_v1_users_all_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UserListResponse"];
        };
      };
    };
  };
  get_user_groups_api_v1_users_groups_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  get_user_permissisions_api_v1_users_permissions_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  get_default_user_permissions_api_v1_users_default_permissions_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UserPermissions"];
        };
      };
    };
  };
  update_default_user_permissions_api_v1_users_default_permissions_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserPermissions"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_user_role_api_v1_users_update_role_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserRoleUpdateForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UserModel"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_user_settings_by_session_user_api_v1_users_user_settings_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UserSettings"] | null;
        };
      };
    };
  };
  update_user_settings_by_session_user_api_v1_users_user_settings_update_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserSettings"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UserSettings"];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_user_info_by_session_user_api_v1_users_user_info_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": Record<string, never> | null;
        };
      };
    };
  };
  update_user_info_by_session_user_api_v1_users_user_info_update_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": Record<string, never>;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": Record<string, never> | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_user_by_id_api_v1_users__user_id__get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        user_id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["open_webui__routers__users__UserResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  delete_user_by_id_api_v1_users__user_id__delete: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        user_id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": boolean;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_user_by_id_api_v1_users__user_id__update_post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        user_id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserUpdateForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UserModel"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_channels_api_v1_channels__get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ChannelModel"][];
        };
      };
    };
  };
  create_new_channel_api_v1_channels_create_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ChannelForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ChannelModel"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_channel_by_id_api_v1_channels__id__get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ChannelModel"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_channel_by_id_api_v1_channels__id__update_post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ChannelForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ChannelModel"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  delete_channel_by_id_api_v1_channels__id__delete_delete: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": boolean;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_channel_messages_api_v1_channels__id__messages_get: {
    parameters: {
      query?: {
        skip?: number;
        limit?: number;
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["MessageUserResponse"][];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  post_new_message_api_v1_channels__id__messages_post_post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["open_webui__models__messages__MessageForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["MessageModel"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_channel_message_api_v1_channels__id__messages__message_id__get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
        message_id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json":
            | components["schemas"]["MessageUserResponse"]
            | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_channel_thread_messages_api_v1_channels__id__messages__message_id__thread_get: {
    parameters: {
      query?: {
        skip?: number;
        limit?: number;
      };
      header?: never;
      path: {
        id: string;
        message_id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["MessageUserResponse"][];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_message_by_id_api_v1_channels__id__messages__message_id__update_post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
        message_id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["open_webui__models__messages__MessageForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["MessageModel"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  add_reaction_to_message_api_v1_channels__id__messages__message_id__reactions_add_post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
        message_id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ReactionForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": boolean;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  remove_reaction_by_id_and_user_id_and_name_api_v1_channels__id__messages__message_id__reactions_remove_post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
        message_id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ReactionForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": boolean;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  delete_message_by_id_api_v1_channels__id__messages__message_id__delete_delete: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
        message_id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": boolean;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_session_user_chat_list_api_v1_chats_list_get: {
    parameters: {
      query?: {
        page?: number | null;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ChatTitleIdResponse"][];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_session_user_chat_list_api_v1_chats__get: {
    parameters: {
      query?: {
        page?: number | null;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ChatTitleIdResponse"][];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  delete_all_user_chats_api_v1_chats__delete: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": boolean;
        };
      };
    };
  };
  get_user_chat_list_by_user_id_api_v1_chats_list_user__user_id__get: {
    parameters: {
      query?: {
        skip?: number;
        limit?: number;
      };
      header?: never;
      path: {
        user_id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ChatTitleIdResponse"][];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  create_new_chat_api_v1_chats_new_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ChatForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ChatResponse"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  import_chat_api_v1_chats_import_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ChatImportForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ChatResponse"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  search_user_chats_api_v1_chats_search_get: {
    parameters: {
      query: {
        text: string;
        page?: number | null;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ChatTitleIdResponse"][];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_chats_by_folder_id_api_v1_chats_folder__folder_id__get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        folder_id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ChatResponse"][];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_user_pinned_chats_api_v1_chats_pinned_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ChatResponse"][];
        };
      };
    };
  };
  get_user_chats_api_v1_chats_all_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ChatResponse"][];
        };
      };
    };
  };
  get_user_archived_chats_api_v1_chats_all_archived_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ChatResponse"][];
        };
      };
    };
  };
  get_all_user_tags_api_v1_chats_all_tags_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["TagModel"][];
        };
      };
    };
  };
  get_all_user_chats_in_db_api_v1_chats_all_db_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ChatResponse"][];
        };
      };
    };
  };
  get_archived_session_user_chat_list_api_v1_chats_archived_get: {
    parameters: {
      query?: {
        skip?: number;
        limit?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ChatTitleIdResponse"][];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  archive_all_chats_api_v1_chats_archive_all_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": boolean;
        };
      };
    };
  };
  get_shared_chat_by_id_api_v1_chats_share__share_id__get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        share_id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ChatResponse"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_user_chat_list_by_tag_name_api_v1_chats_tags_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["TagFilterForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ChatTitleIdResponse"][];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_chat_by_id_api_v1_chats__id__get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ChatResponse"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_chat_by_id_api_v1_chats__id__post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ChatForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ChatResponse"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  delete_chat_by_id_api_v1_chats__id__delete: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": boolean;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_chat_message_by_id_api_v1_chats__id__messages__message_id__post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
        message_id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["open_webui__routers__chats__MessageForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ChatResponse"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  send_chat_message_event_by_id_api_v1_chats__id__messages__message_id__event_post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
        message_id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["EventForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": boolean | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_pinned_status_by_id_api_v1_chats__id__pinned_get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": boolean | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  pin_chat_by_id_api_v1_chats__id__pin_post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ChatResponse"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  clone_chat_by_id_api_v1_chats__id__clone_post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CloneForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ChatResponse"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  clone_shared_chat_by_id_api_v1_chats__id__clone_shared_post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ChatResponse"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  archive_chat_by_id_api_v1_chats__id__archive_post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ChatResponse"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  share_chat_by_id_api_v1_chats__id__share_post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ChatResponse"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  delete_shared_chat_by_id_api_v1_chats__id__share_delete: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": boolean | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_chat_folder_id_by_id_api_v1_chats__id__folder_post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ChatFolderIdForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ChatResponse"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_chat_tags_by_id_api_v1_chats__id__tags_get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["TagModel"][];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  add_tag_by_id_and_tag_name_api_v1_chats__id__tags_post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["TagForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["TagModel"][];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  delete_tag_by_id_and_tag_name_api_v1_chats__id__tags_delete: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["TagForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["TagModel"][];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  delete_all_tags_by_id_api_v1_chats__id__tags_all_delete: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": boolean | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_notes_api_v1_notes__get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["NoteUserResponse"][];
        };
      };
    };
  };
  get_note_list_api_v1_notes_list_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["NoteUserResponse"][];
        };
      };
    };
  };
  create_new_note_api_v1_notes_create_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["NoteForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["NoteModel"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_note_by_id_api_v1_notes__id__get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["NoteModel"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_note_by_id_api_v1_notes__id__update_post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["NoteForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["NoteModel"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  delete_note_by_id_api_v1_notes__id__delete_delete: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": boolean;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_models_api_v1_models__get: {
    parameters: {
      query?: {
        id?: string | null;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ModelUserResponse"][];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_base_models_api_v1_models_base_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ModelResponse"][];
        };
      };
    };
  };
  create_new_model_api_v1_models_create_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ModelForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ModelModel"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_model_by_id_api_v1_models_model_get: {
    parameters: {
      query: {
        id: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ModelResponse"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  toggle_model_by_id_api_v1_models_model_toggle_post: {
    parameters: {
      query: {
        id: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ModelResponse"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_model_by_id_api_v1_models_model_update_post: {
    parameters: {
      query: {
        id: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ModelForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ModelModel"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  delete_model_by_id_api_v1_models_model_delete_delete: {
    parameters: {
      query: {
        id: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": boolean;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  delete_all_models_api_v1_models_delete_all_delete: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": boolean;
        };
      };
    };
  };
  get_knowledge_api_v1_knowledge__get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["KnowledgeUserResponse"][];
        };
      };
    };
  };
  get_knowledge_list_api_v1_knowledge_list_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["KnowledgeUserResponse"][];
        };
      };
    };
  };
  create_new_knowledge_api_v1_knowledge_create_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["KnowledgeForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["KnowledgeResponse"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  reindex_knowledge_files_api_v1_knowledge_reindex_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": boolean;
        };
      };
    };
  };
  get_knowledge_by_id_api_v1_knowledge__id__get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json":
            | components["schemas"]["KnowledgeFilesResponse"]
            | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_knowledge_by_id_api_v1_knowledge__id__update_post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["KnowledgeForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json":
            | components["schemas"]["KnowledgeFilesResponse"]
            | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  add_file_to_knowledge_by_id_api_v1_knowledge__id__file_add_post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["KnowledgeFileIdForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json":
            | components["schemas"]["KnowledgeFilesResponse"]
            | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_file_from_knowledge_by_id_api_v1_knowledge__id__file_update_post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["KnowledgeFileIdForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json":
            | components["schemas"]["KnowledgeFilesResponse"]
            | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  remove_file_from_knowledge_by_id_api_v1_knowledge__id__file_remove_post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["KnowledgeFileIdForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json":
            | components["schemas"]["KnowledgeFilesResponse"]
            | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  delete_knowledge_by_id_api_v1_knowledge__id__delete_delete: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": boolean;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  reset_knowledge_by_id_api_v1_knowledge__id__reset_post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["KnowledgeResponse"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  add_files_to_knowledge_batch_api_v1_knowledge__id__files_batch_add_post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["KnowledgeFileIdForm"][];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json":
            | components["schemas"]["KnowledgeFilesResponse"]
            | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_prompts_api_v1_prompts__get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PromptModel"][];
        };
      };
    };
  };
  get_prompt_list_api_v1_prompts_list_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PromptUserResponse"][];
        };
      };
    };
  };
  create_new_prompt_api_v1_prompts_create_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PromptForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PromptModel"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_prompt_by_command_api_v1_prompts_command__command__get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        command: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PromptModel"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_prompt_by_command_api_v1_prompts_command__command__update_post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        command: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PromptForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PromptModel"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  delete_prompt_by_command_api_v1_prompts_command__command__delete_delete: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        command: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": boolean;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_tools_api_v1_tools__get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ToolUserResponse"][];
        };
      };
    };
  };
  get_tool_list_api_v1_tools_list_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ToolUserResponse"][];
        };
      };
    };
  };
  export_tools_api_v1_tools_export_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ToolModel"][];
        };
      };
    };
  };
  create_new_tools_api_v1_tools_create_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ToolForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ToolResponse"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_tools_by_id_api_v1_tools_id__id__get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ToolModel"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_tools_by_id_api_v1_tools_id__id__update_post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ToolForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ToolModel"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  delete_tools_by_id_api_v1_tools_id__id__delete_delete: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": boolean;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_tools_valves_by_id_api_v1_tools_id__id__valves_get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": Record<string, never> | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_tools_valves_spec_by_id_api_v1_tools_id__id__valves_spec_get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": Record<string, never> | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_tools_valves_by_id_api_v1_tools_id__id__valves_update_post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": Record<string, never>;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": Record<string, never> | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_tools_user_valves_by_id_api_v1_tools_id__id__valves_user_get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": Record<string, never> | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_tools_user_valves_spec_by_id_api_v1_tools_id__id__valves_user_spec_get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": Record<string, never> | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_tools_user_valves_by_id_api_v1_tools_id__id__valves_user_update_post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": Record<string, never>;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": Record<string, never> | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_embeddings_api_v1_memories_ef_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  get_memories_api_v1_memories__get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["MemoryModel"][];
        };
      };
    };
  };
  add_memory_api_v1_memories_add_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AddMemoryForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["MemoryModel"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  query_memory_api_v1_memories_query_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["QueryMemoryForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  reset_memory_from_vector_db_api_v1_memories_reset_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": boolean;
        };
      };
    };
  };
  delete_memory_by_user_id_api_v1_memories_delete_user_delete: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": boolean;
        };
      };
    };
  };
  update_memory_by_id_api_v1_memories__memory_id__update_post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        memory_id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["MemoryUpdateModel"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["MemoryModel"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  delete_memory_by_id_api_v1_memories__memory_id__delete: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        memory_id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": boolean;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_folders_api_v1_folders__get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["FolderModel"][];
        };
      };
    };
  };
  create_folder_api_v1_folders__post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["FolderForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_folder_by_id_api_v1_folders__id__get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["FolderModel"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  delete_folder_by_id_api_v1_folders__id__delete: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_folder_name_by_id_api_v1_folders__id__update_post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["FolderForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_folder_parent_id_by_id_api_v1_folders__id__update_parent_post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["FolderParentIdForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_folder_is_expanded_by_id_api_v1_folders__id__update_expanded_post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["FolderIsExpandedForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_groups_api_v1_groups__get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GroupResponse"][];
        };
      };
    };
  };
  create_new_group_api_v1_groups_create_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["GroupForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GroupResponse"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_group_by_id_api_v1_groups_id__id__get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GroupResponse"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_group_by_id_api_v1_groups_id__id__update_post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["GroupUpdateForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GroupResponse"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  delete_group_by_id_api_v1_groups_id__id__delete_delete: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": boolean;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  list_files_api_v1_files__get: {
    parameters: {
      query?: {
        content?: boolean;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["FileModelResponse"][];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  upload_file_api_v1_files__post: {
    parameters: {
      query?: {
        process?: boolean;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["Body_upload_file_api_v1_files__post"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["FileModelResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  search_files_api_v1_files_search_get: {
    parameters: {
      query: {
        /** @description Filename pattern to search for. Supports wildcards such as '*.txt' */
        filename: string;
        content?: boolean;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["FileModelResponse"][];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  delete_all_files_api_v1_files_all_delete: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  get_file_by_id_api_v1_files__id__get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["FileModel"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  delete_file_by_id_api_v1_files__id__delete: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_file_data_content_by_id_api_v1_files__id__data_content_get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_file_data_content_by_id_api_v1_files__id__data_content_update_post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ContentForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_file_content_by_id_api_v1_files__id__content_get: {
    parameters: {
      query?: {
        attachment?: boolean;
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_html_file_content_by_id_api_v1_files__id__content_html_get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_file_content_by_id_api_v1_files__id__content__file_name__get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_functions_api_v1_functions__get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["FunctionResponse"][];
        };
      };
    };
  };
  get_functions_api_v1_functions_export_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["FunctionModel"][];
        };
      };
    };
  };
  create_new_function_api_v1_functions_create_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["FunctionForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["FunctionResponse"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_function_by_id_api_v1_functions_id__id__get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["FunctionModel"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  toggle_function_by_id_api_v1_functions_id__id__toggle_post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["FunctionModel"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  toggle_global_by_id_api_v1_functions_id__id__toggle_global_post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["FunctionModel"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_function_by_id_api_v1_functions_id__id__update_post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["FunctionForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["FunctionModel"] | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  delete_function_by_id_api_v1_functions_id__id__delete_delete: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": boolean;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_function_valves_by_id_api_v1_functions_id__id__valves_get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": Record<string, never> | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_function_valves_spec_by_id_api_v1_functions_id__id__valves_spec_get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": Record<string, never> | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_function_valves_by_id_api_v1_functions_id__id__valves_update_post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": Record<string, never>;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": Record<string, never> | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_function_user_valves_by_id_api_v1_functions_id__id__valves_user_get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": Record<string, never> | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_function_user_valves_spec_by_id_api_v1_functions_id__id__valves_user_spec_get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": Record<string, never> | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_function_user_valves_by_id_api_v1_functions_id__id__valves_user_update_post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": Record<string, never>;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": Record<string, never> | null;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_config_api_v1_evaluations_config_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  update_config_api_v1_evaluations_config_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateConfigForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_all_feedbacks_api_v1_evaluations_feedbacks_all_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["FeedbackUserResponse"][];
        };
      };
    };
  };
  delete_all_feedbacks_api_v1_evaluations_feedbacks_all_delete: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  get_all_feedbacks_api_v1_evaluations_feedbacks_all_export_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["FeedbackModel"][];
        };
      };
    };
  };
  get_feedbacks_api_v1_evaluations_feedbacks_user_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["FeedbackUserResponse"][];
        };
      };
    };
  };
  delete_feedbacks_api_v1_evaluations_feedbacks_delete: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": boolean;
        };
      };
    };
  };
  create_feedback_api_v1_evaluations_feedback_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["FeedbackForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["FeedbackModel"];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_feedback_by_id_api_v1_evaluations_feedback__id__get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["FeedbackModel"];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_feedback_by_id_api_v1_evaluations_feedback__id__post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["FeedbackForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["FeedbackModel"];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  delete_feedback_by_id_api_v1_evaluations_feedback__id__delete: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_gravatar_api_v1_utils_gravatar_get: {
    parameters: {
      query: {
        email: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  format_code_api_v1_utils_code_format_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CodeForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  execute_code_api_v1_utils_code_execute_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CodeForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_html_from_markdown_api_v1_utils_markdown_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["MarkdownForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  download_chat_as_pdf_api_v1_utils_pdf_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ChatTitleMessagesForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  download_db_api_v1_utils_db_download_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  download_litellm_config_yaml_api_v1_utils_litellm_config_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  get_models_api_models_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  get_base_models_api_models_base_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  chat_completion_api_chat_completions_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": Record<string, never>;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  chat_completed_api_chat_completed_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": Record<string, never>;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  chat_action_api_chat_actions__action_id__post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        action_id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": Record<string, never>;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  stop_task_endpoint_api_tasks_stop__task_id__post: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        task_id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  list_tasks_endpoint_api_tasks_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  list_tasks_by_chat_id_endpoint_api_tasks_chat__chat_id__get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        chat_id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_app_config_api_config_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  get_webhook_url_api_webhook_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  update_webhook_url_api_webhook_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UrlForm"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_app_version_api_version_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  get_app_latest_release_version_api_version_updates_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  get_app_changelog_api_changelog_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  oauth_login_oauth__provider__login_get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        provider: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  oauth_callback_oauth__provider__callback_get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        provider: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_manifest_json_manifest_json_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  get_opensearch_xml_opensearch_xml_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  healthcheck_health_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  healthcheck_with_db_health_db_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": unknown;
        };
      };
    };
  };
}
